        -:    0:Source:/opt/homebrew/Cellar/gcc@12/12.4.0/include/c++/12/aarch64-apple-darwin23/bits/c++config.h
        -:    0:Graph:/Users/vadimleonov/Desktop/плюсы/SQL_lib/cmake-build-debug-coverage/lib/CMakeFiles/tests.dir/tests.cpp.gcno
        -:    0:Data:/Users/vadimleonov/Desktop/плюсы/SQL_lib/cmake-build-debug-coverage/lib/CMakeFiles/tests.dir/tests.cpp.gcda
        -:    0:Runs:1
        -:    1:// Predefined symbols and macros -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 1997-2022 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file bits/c++config.h
        -:   26: *  This is an internal header file, included by other library headers.
        -:   27: *  Do not attempt to use it directly. @headername{version}
        -:   28: */
        -:   29:
        -:   30:#ifndef _GLIBCXX_CXX_CONFIG_H
        -:   31:#define _GLIBCXX_CXX_CONFIG_H 1
        -:   32:
        -:   33:// The major release number for the GCC release the C++ library belongs to.
        -:   34:#define _GLIBCXX_RELEASE 12
        -:   35:
        -:   36:// The datestamp of the C++ library in compressed ISO date format.
        -:   37:#define __GLIBCXX__ 20240620
        -:   38:
        -:   39:// Macros for various attributes.
        -:   40://   _GLIBCXX_PURE
        -:   41://   _GLIBCXX_CONST
        -:   42://   _GLIBCXX_NORETURN
        -:   43://   _GLIBCXX_NOTHROW
        -:   44://   _GLIBCXX_VISIBILITY
        -:   45:#ifndef _GLIBCXX_PURE
        -:   46:# define _GLIBCXX_PURE __attribute__ ((__pure__))
        -:   47:#endif
        -:   48:
        -:   49:#ifndef _GLIBCXX_CONST
        -:   50:# define _GLIBCXX_CONST __attribute__ ((__const__))
        -:   51:#endif
        -:   52:
        -:   53:#ifndef _GLIBCXX_NORETURN
        -:   54:# define _GLIBCXX_NORETURN __attribute__ ((__noreturn__))
        -:   55:#endif
        -:   56:
        -:   57:// See below for C++
        -:   58:#ifndef _GLIBCXX_NOTHROW
        -:   59:# ifndef __cplusplus
        -:   60:#  define _GLIBCXX_NOTHROW __attribute__((__nothrow__))
        -:   61:# endif
        -:   62:#endif
        -:   63:
        -:   64:// Macros for visibility attributes.
        -:   65://   _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY
        -:   66://   _GLIBCXX_VISIBILITY
        -:   67:# define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 1
        -:   68:
        -:   69:#if _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY
        -:   70:# define _GLIBCXX_VISIBILITY(V) __attribute__ ((__visibility__ (#V)))
        -:   71:#else
        -:   72:// If this is not supplied by the OS-specific or CPU-specific
        -:   73:// headers included below, it will be defined to an empty default.
        -:   74:# define _GLIBCXX_VISIBILITY(V) _GLIBCXX_PSEUDO_VISIBILITY(V)
        -:   75:#endif
        -:   76:
        -:   77:// Macros for deprecated attributes.
        -:   78://   _GLIBCXX_USE_DEPRECATED
        -:   79://   _GLIBCXX_DEPRECATED
        -:   80://   _GLIBCXX_DEPRECATED_SUGGEST( string-literal )
        -:   81://   _GLIBCXX11_DEPRECATED
        -:   82://   _GLIBCXX11_DEPRECATED_SUGGEST( string-literal )
        -:   83://   _GLIBCXX14_DEPRECATED
        -:   84://   _GLIBCXX14_DEPRECATED_SUGGEST( string-literal )
        -:   85://   _GLIBCXX17_DEPRECATED
        -:   86://   _GLIBCXX17_DEPRECATED_SUGGEST( string-literal )
        -:   87://   _GLIBCXX20_DEPRECATED( string-literal )
        -:   88://   _GLIBCXX20_DEPRECATED_SUGGEST( string-literal )
        -:   89:#ifndef _GLIBCXX_USE_DEPRECATED
        -:   90:# define _GLIBCXX_USE_DEPRECATED 1
        -:   91:#endif
        -:   92:
        -:   93:#if defined(__DEPRECATED)
        -:   94:# define _GLIBCXX_DEPRECATED __attribute__ ((__deprecated__))
        -:   95:# define _GLIBCXX_DEPRECATED_SUGGEST(ALT) \
        -:   96:  __attribute__ ((__deprecated__ ("use '" ALT "' instead")))
        -:   97:#else
        -:   98:# define _GLIBCXX_DEPRECATED
        -:   99:# define _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  100:#endif
        -:  101:
        -:  102:#if defined(__DEPRECATED) && (__cplusplus >= 201103L)
        -:  103:# define _GLIBCXX11_DEPRECATED _GLIBCXX_DEPRECATED
        -:  104:# define _GLIBCXX11_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  105:#else
        -:  106:# define _GLIBCXX11_DEPRECATED
        -:  107:# define _GLIBCXX11_DEPRECATED_SUGGEST(ALT)
        -:  108:#endif
        -:  109:
        -:  110:#if defined(__DEPRECATED) && (__cplusplus >= 201402L)
        -:  111:# define _GLIBCXX14_DEPRECATED _GLIBCXX_DEPRECATED
        -:  112:# define _GLIBCXX14_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  113:#else
        -:  114:# define _GLIBCXX14_DEPRECATED
        -:  115:# define _GLIBCXX14_DEPRECATED_SUGGEST(ALT)
        -:  116:#endif
        -:  117:
        -:  118:#if defined(__DEPRECATED) && (__cplusplus >= 201703L)
        -:  119:# define _GLIBCXX17_DEPRECATED [[__deprecated__]]
        -:  120:# define _GLIBCXX17_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  121:#else
        -:  122:# define _GLIBCXX17_DEPRECATED
        -:  123:# define _GLIBCXX17_DEPRECATED_SUGGEST(ALT)
        -:  124:#endif
        -:  125:
        -:  126:#if defined(__DEPRECATED) && (__cplusplus >= 202002L)
        -:  127:# define _GLIBCXX20_DEPRECATED(MSG) [[deprecated(MSG)]]
        -:  128:# define _GLIBCXX20_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  129:#else
        -:  130:# define _GLIBCXX20_DEPRECATED(MSG)
        -:  131:# define _GLIBCXX20_DEPRECATED_SUGGEST(ALT)
        -:  132:#endif
        -:  133:
        -:  134:// Macros for ABI tag attributes.
        -:  135:#ifndef _GLIBCXX_ABI_TAG_CXX11
        -:  136:# define _GLIBCXX_ABI_TAG_CXX11 __attribute ((__abi_tag__ ("cxx11")))
        -:  137:#endif
        -:  138:
        -:  139:// Macro to warn about unused results.
        -:  140:#if __cplusplus >= 201703L
        -:  141:# define _GLIBCXX_NODISCARD [[__nodiscard__]]
        -:  142:#else
        -:  143:# define _GLIBCXX_NODISCARD
        -:  144:#endif
        -:  145:
        -:  146:
        -:  147:
        -:  148:#if __cplusplus
        -:  149:
        -:  150:// Macro for constexpr, to support in mixed 03/0x mode.
        -:  151:#ifndef _GLIBCXX_CONSTEXPR
        -:  152:# if __cplusplus >= 201103L
        -:  153:#  define _GLIBCXX_CONSTEXPR constexpr
        -:  154:#  define _GLIBCXX_USE_CONSTEXPR constexpr
        -:  155:# else
        -:  156:#  define _GLIBCXX_CONSTEXPR
        -:  157:#  define _GLIBCXX_USE_CONSTEXPR const
        -:  158:# endif
        -:  159:#endif
        -:  160:
        -:  161:#ifndef _GLIBCXX14_CONSTEXPR
        -:  162:# if __cplusplus >= 201402L
        -:  163:#  define _GLIBCXX14_CONSTEXPR constexpr
        -:  164:# else
        -:  165:#  define _GLIBCXX14_CONSTEXPR
        -:  166:# endif
        -:  167:#endif
        -:  168:
        -:  169:#ifndef _GLIBCXX17_CONSTEXPR
        -:  170:# if __cplusplus >= 201703L
        -:  171:#  define _GLIBCXX17_CONSTEXPR constexpr
        -:  172:# else
        -:  173:#  define _GLIBCXX17_CONSTEXPR
        -:  174:# endif
        -:  175:#endif
        -:  176:
        -:  177:#ifndef _GLIBCXX20_CONSTEXPR
        -:  178:# if __cplusplus >= 202002L
        -:  179:#  define _GLIBCXX20_CONSTEXPR constexpr
        -:  180:# else
        -:  181:#  define _GLIBCXX20_CONSTEXPR
        -:  182:# endif
        -:  183:#endif
        -:  184:
        -:  185:#ifndef _GLIBCXX23_CONSTEXPR
        -:  186:# if __cplusplus >= 202100L
        -:  187:#  define _GLIBCXX23_CONSTEXPR constexpr
        -:  188:# else
        -:  189:#  define _GLIBCXX23_CONSTEXPR
        -:  190:# endif
        -:  191:#endif
        -:  192:
        -:  193:#ifndef _GLIBCXX17_INLINE
        -:  194:# if __cplusplus >= 201703L
        -:  195:#  define _GLIBCXX17_INLINE inline
        -:  196:# else
        -:  197:#  define _GLIBCXX17_INLINE
        -:  198:# endif
        -:  199:#endif
        -:  200:
        -:  201:// Macro for noexcept, to support in mixed 03/0x mode.
        -:  202:#ifndef _GLIBCXX_NOEXCEPT
        -:  203:# if __cplusplus >= 201103L
        -:  204:#  define _GLIBCXX_NOEXCEPT noexcept
        -:  205:#  define _GLIBCXX_NOEXCEPT_IF(...) noexcept(__VA_ARGS__)
        -:  206:#  define _GLIBCXX_USE_NOEXCEPT noexcept
        -:  207:#  define _GLIBCXX_THROW(_EXC)
        -:  208:# else
        -:  209:#  define _GLIBCXX_NOEXCEPT
        -:  210:#  define _GLIBCXX_NOEXCEPT_IF(...)
        -:  211:#  define _GLIBCXX_USE_NOEXCEPT throw()
        -:  212:#  define _GLIBCXX_THROW(_EXC) throw(_EXC)
        -:  213:# endif
        -:  214:#endif
        -:  215:
        -:  216:#ifndef _GLIBCXX_NOTHROW
        -:  217:# define _GLIBCXX_NOTHROW _GLIBCXX_USE_NOEXCEPT
        -:  218:#endif
        -:  219:
        -:  220:#ifndef _GLIBCXX_THROW_OR_ABORT
        -:  221:# if __cpp_exceptions
        -:  222:#  define _GLIBCXX_THROW_OR_ABORT(_EXC) (throw (_EXC))
        -:  223:# else
        -:  224:#  define _GLIBCXX_THROW_OR_ABORT(_EXC) (__builtin_abort())
        -:  225:# endif
        -:  226:#endif
        -:  227:
        -:  228:#if __cpp_noexcept_function_type
        -:  229:#define _GLIBCXX_NOEXCEPT_PARM , bool _NE
        -:  230:#define _GLIBCXX_NOEXCEPT_QUAL noexcept (_NE)
        -:  231:#else
        -:  232:#define _GLIBCXX_NOEXCEPT_PARM
        -:  233:#define _GLIBCXX_NOEXCEPT_QUAL
        -:  234:#endif
        -:  235:
        -:  236:// Macro for extern template, ie controlling template linkage via use
        -:  237:// of extern keyword on template declaration. As documented in the g++
        -:  238:// manual, it inhibits all implicit instantiations and is used
        -:  239:// throughout the library to avoid multiple weak definitions for
        -:  240:// required types that are already explicitly instantiated in the
        -:  241:// library binary. This substantially reduces the binary size of
        -:  242:// resulting executables.
        -:  243:// Special case: _GLIBCXX_EXTERN_TEMPLATE == -1 disallows extern
        -:  244:// templates only in basic_string, thus activating its debug-mode
        -:  245:// checks even at -O0.
        -:  246:# define _GLIBCXX_EXTERN_TEMPLATE 1
        -:  247:
        -:  248:/*
        -:  249:  Outline of libstdc++ namespaces.
        -:  250:
        -:  251:  namespace std
        -:  252:  {
        -:  253:    namespace __debug { }
        -:  254:    namespace __parallel { }
        -:  255:    namespace __cxx1998 { }
        -:  256:
        -:  257:    namespace __detail {
        -:  258:      namespace __variant { }				// C++17
        -:  259:    }
        -:  260:
        -:  261:    namespace rel_ops { }
        -:  262:
        -:  263:    namespace tr1
        -:  264:    {
        -:  265:      namespace placeholders { }
        -:  266:      namespace regex_constants { }
        -:  267:      namespace __detail { }
        -:  268:    }
        -:  269:
        -:  270:    namespace tr2 { }
        -:  271:    
        -:  272:    namespace decimal { }
        -:  273:
        -:  274:    namespace chrono { }				// C++11
        -:  275:    namespace placeholders { }				// C++11
        -:  276:    namespace regex_constants { }			// C++11
        -:  277:    namespace this_thread { }				// C++11
        -:  278:    inline namespace literals {				// C++14
        -:  279:      inline namespace chrono_literals { }		// C++14
        -:  280:      inline namespace complex_literals { }		// C++14
        -:  281:      inline namespace string_literals { }		// C++14
        -:  282:      inline namespace string_view_literals { }		// C++17
        -:  283:    }
        -:  284:  }
        -:  285:
        -:  286:  namespace abi { }
        -:  287:
        -:  288:  namespace __gnu_cxx
        -:  289:  {
        -:  290:    namespace __detail { }
        -:  291:  }
        -:  292:
        -:  293:  For full details see:
        -:  294:  http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html
        -:  295:*/
        -:  296:namespace std
        -:  297:{
        -:  298:  typedef __SIZE_TYPE__ 	size_t;
        -:  299:  typedef __PTRDIFF_TYPE__	ptrdiff_t;
        -:  300:
        -:  301:#if __cplusplus >= 201103L
        -:  302:  typedef decltype(nullptr)	nullptr_t;
        -:  303:#endif
        -:  304:
        -:  305:#pragma GCC visibility push(default)
        -:  306:  // This allows the library to terminate without including all of <exception>
        -:  307:  // and without making the declaration of std::terminate visible to users.
        -:  308:  extern "C++" __attribute__ ((__noreturn__, __always_inline__))
        -:  309:  inline void __terminate() _GLIBCXX_USE_NOEXCEPT
        -:  310:  {
        -:  311:    void terminate() _GLIBCXX_USE_NOEXCEPT __attribute__ ((__noreturn__));
        -:  312:    terminate();
        -:  313:  }
        -:  314:#pragma GCC visibility pop
        -:  315:}
        -:  316:
        -:  317:# define _GLIBCXX_USE_DUAL_ABI 1
        -:  318:
        -:  319:#if ! _GLIBCXX_USE_DUAL_ABI
        -:  320:// Ignore any pre-defined value of _GLIBCXX_USE_CXX11_ABI
        -:  321:# undef _GLIBCXX_USE_CXX11_ABI
        -:  322:#endif
        -:  323:
        -:  324:#ifndef _GLIBCXX_USE_CXX11_ABI
        -:  325:# define _GLIBCXX_USE_CXX11_ABI 1
        -:  326:#endif
        -:  327:
        -:  328:#if _GLIBCXX_USE_CXX11_ABI
        -:  329:namespace std
        -:  330:{
        -:  331:  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
        -:  332:}
        -:  333:namespace __gnu_cxx
        -:  334:{
        -:  335:  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
        -:  336:}
        -:  337:# define _GLIBCXX_NAMESPACE_CXX11 __cxx11::
        -:  338:# define _GLIBCXX_BEGIN_NAMESPACE_CXX11 namespace __cxx11 {
        -:  339:# define _GLIBCXX_END_NAMESPACE_CXX11 }
        -:  340:# define _GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_ABI_TAG_CXX11
        -:  341:#else
        -:  342:# define _GLIBCXX_NAMESPACE_CXX11
        -:  343:# define _GLIBCXX_BEGIN_NAMESPACE_CXX11
        -:  344:# define _GLIBCXX_END_NAMESPACE_CXX11
        -:  345:# define _GLIBCXX_DEFAULT_ABI_TAG
        -:  346:#endif
        -:  347:
        -:  348:// Non-zero if inline namespaces are used for versioning the entire library.
        -:  349:# define _GLIBCXX_INLINE_VERSION 0 
        -:  350:
        -:  351:#if _GLIBCXX_INLINE_VERSION
        -:  352:// Inline namespace for symbol versioning of (nearly) everything in std.
        -:  353:# define _GLIBCXX_BEGIN_NAMESPACE_VERSION namespace __8 {
        -:  354:# define _GLIBCXX_END_NAMESPACE_VERSION }
        -:  355:// Unused when everything in std is versioned anyway.
        -:  356:# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(X)
        -:  357:# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(X)
        -:  358:
        -:  359:namespace std
        -:  360:{
        -:  361:inline _GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  362:#if __cplusplus >= 201402L
        -:  363:  inline namespace literals {
        -:  364:    inline namespace chrono_literals { }
        -:  365:    inline namespace complex_literals { }
        -:  366:    inline namespace string_literals { }
        -:  367:#if __cplusplus > 201402L
        -:  368:    inline namespace string_view_literals { }
        -:  369:#endif // C++17
        -:  370:  }
        -:  371:#endif // C++14
        -:  372:_GLIBCXX_END_NAMESPACE_VERSION
        -:  373:}
        -:  374:
        -:  375:namespace __gnu_cxx
        -:  376:{
        -:  377:inline _GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  378:_GLIBCXX_END_NAMESPACE_VERSION
        -:  379:}
        -:  380:
        -:  381:#else
        -:  382:// Unused.
        -:  383:# define _GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  384:# define _GLIBCXX_END_NAMESPACE_VERSION
        -:  385:// Used to version individual components, e.g. std::_V2::error_category.
        -:  386:# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(X) inline namespace X {
        -:  387:# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(X)   } // inline namespace X
        -:  388:#endif
        -:  389:
        -:  390:// Inline namespaces for special modes: debug, parallel.
        -:  391:#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PARALLEL)
        -:  392:namespace std
        -:  393:{
        -:  394:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  395:
        -:  396:  // Non-inline namespace for components replaced by alternates in active mode.
        -:  397:  namespace __cxx1998
        -:  398:  {
        -:  399:# if _GLIBCXX_USE_CXX11_ABI
        -:  400:  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
        -:  401:# endif
        -:  402:  }
        -:  403:
        -:  404:_GLIBCXX_END_NAMESPACE_VERSION
        -:  405:
        -:  406:  // Inline namespace for debug mode.
        -:  407:# ifdef _GLIBCXX_DEBUG
        -:  408:  inline namespace __debug { }
        -:  409:# endif
        -:  410:
        -:  411:  // Inline namespaces for parallel mode.
        -:  412:# ifdef _GLIBCXX_PARALLEL
        -:  413:  inline namespace __parallel { }
        -:  414:# endif
        -:  415:}
        -:  416:
        -:  417:// Check for invalid usage and unsupported mixed-mode use.
        -:  418:# if defined(_GLIBCXX_DEBUG) && defined(_GLIBCXX_PARALLEL)
        -:  419:#  error illegal use of multiple inlined namespaces
        -:  420:# endif
        -:  421:
        -:  422:// Check for invalid use due to lack for weak symbols.
        -:  423:# if __NO_INLINE__ && !__GXX_WEAK__
        -:  424:#  warning currently using inlined namespace mode which may fail \
        -:  425:   without inlining due to lack of weak symbols
        -:  426:# endif
        -:  427:#endif
        -:  428:
        -:  429:// Macros for namespace scope. Either namespace std:: or the name
        -:  430:// of some nested namespace within it corresponding to the active mode.
        -:  431:// _GLIBCXX_STD_A
        -:  432:// _GLIBCXX_STD_C
        -:  433://
        -:  434:// Macros for opening/closing conditional namespaces.
        -:  435:// _GLIBCXX_BEGIN_NAMESPACE_ALGO
        -:  436:// _GLIBCXX_END_NAMESPACE_ALGO
        -:  437:// _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
        -:  438:// _GLIBCXX_END_NAMESPACE_CONTAINER
        -:  439:#if defined(_GLIBCXX_DEBUG)
        -:  440:# define _GLIBCXX_STD_C __cxx1998
        -:  441:# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER \
        -:  442:	 namespace _GLIBCXX_STD_C {
        -:  443:# define _GLIBCXX_END_NAMESPACE_CONTAINER }
        -:  444:#else
        -:  445:# define _GLIBCXX_STD_C std
        -:  446:# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
        -:  447:# define _GLIBCXX_END_NAMESPACE_CONTAINER
        -:  448:#endif
        -:  449:
        -:  450:#ifdef _GLIBCXX_PARALLEL
        -:  451:# define _GLIBCXX_STD_A __cxx1998
        -:  452:# define _GLIBCXX_BEGIN_NAMESPACE_ALGO \
        -:  453:	 namespace _GLIBCXX_STD_A {
        -:  454:# define _GLIBCXX_END_NAMESPACE_ALGO }
        -:  455:#else
        -:  456:# define _GLIBCXX_STD_A std
        -:  457:# define _GLIBCXX_BEGIN_NAMESPACE_ALGO
        -:  458:# define _GLIBCXX_END_NAMESPACE_ALGO
        -:  459:#endif
        -:  460:
        -:  461:// GLIBCXX_ABI Deprecated
        -:  462:// Define if compatibility should be provided for -mlong-double-64.
        -:  463:#undef _GLIBCXX_LONG_DOUBLE_COMPAT
        -:  464:
        -:  465:// Define if compatibility should be provided for alternative 128-bit long
        -:  466:// double formats. Not possible for Clang until __ibm128 is supported.
        -:  467:#ifndef __clang__
        -:  468:#undef _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT
        -:  469:#endif
        -:  470:
        -:  471:// Inline namespaces for long double 128 modes.
        -:  472:#if defined _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT \
        -:  473:  && defined __LONG_DOUBLE_IEEE128__
        -:  474:namespace std
        -:  475:{
        -:  476:  // Namespaces for 128-bit IEEE long double format on 64-bit POWER LE.
        -:  477:  inline namespace __gnu_cxx_ieee128 { }
        -:  478:  inline namespace __gnu_cxx11_ieee128 { }
        -:  479:}
        -:  480:# define _GLIBCXX_NAMESPACE_LDBL __gnu_cxx_ieee128::
        -:  481:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL namespace __gnu_cxx_ieee128 {
        -:  482:# define _GLIBCXX_END_NAMESPACE_LDBL }
        -:  483:# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 __gnu_cxx11_ieee128::
        -:  484:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 namespace __gnu_cxx11_ieee128 {
        -:  485:# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 }
        -:  486:
        -:  487:#else // _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT && IEEE128
        -:  488:
        -:  489:#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__
        -:  490:namespace std
        -:  491:{
        -:  492:  inline namespace __gnu_cxx_ldbl128 { }
        -:  493:}
        -:  494:# define _GLIBCXX_NAMESPACE_LDBL __gnu_cxx_ldbl128::
        -:  495:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL namespace __gnu_cxx_ldbl128 {
        -:  496:# define _GLIBCXX_END_NAMESPACE_LDBL }
        -:  497:#else
        -:  498:# define _GLIBCXX_NAMESPACE_LDBL
        -:  499:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL
        -:  500:# define _GLIBCXX_END_NAMESPACE_LDBL
        -:  501:#endif
        -:  502:
        -:  503:#if _GLIBCXX_USE_CXX11_ABI
        -:  504:# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_NAMESPACE_CXX11
        -:  505:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_BEGIN_NAMESPACE_CXX11
        -:  506:# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_END_NAMESPACE_CXX11
        -:  507:#else
        -:  508:# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_NAMESPACE_LDBL
        -:  509:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_BEGIN_NAMESPACE_LDBL
        -:  510:# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_END_NAMESPACE_LDBL
        -:  511:#endif
        -:  512:
        -:  513:#endif // _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT && IEEE128
        -:  514:
        -:  515:namespace std
        -:  516:{
        -:  517:#pragma GCC visibility push(default)
        -:  518:  // Internal version of std::is_constant_evaluated().
        -:  519:  // This can be used without checking if the compiler supports the feature.
        -:  520:  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
        -:  521:  // the compiler support is present to make this function work as expected.
        -:  522:  _GLIBCXX_CONSTEXPR inline bool
function _ZSt23__is_constant_evaluatedv called 3959 returned 100% blocks executed 100%
     3959:  523:  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
        -:  524:  {
        -:  525:#if __cpp_if_consteval >= 202106L
        -:  526:# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
     3959:  527:    if consteval { return true; } else { return false; }
     3959:  527-block  0
        -:  528:#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
        -:  529:# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
        -:  530:    return __builtin_is_constant_evaluated();
        -:  531:#else
        -:  532:    return false;
        -:  533:#endif
        -:  534:  }
        -:  535:#pragma GCC visibility pop
        -:  536:}
        -:  537:
        -:  538:// Debug Mode implies checking assertions.
        -:  539:#if defined(_GLIBCXX_DEBUG) && !defined(_GLIBCXX_ASSERTIONS)
        -:  540:# define _GLIBCXX_ASSERTIONS 1
        -:  541:#endif
        -:  542:
        -:  543:// Disable std::string explicit instantiation declarations in order to assert.
        -:  544:#ifdef _GLIBCXX_ASSERTIONS
        -:  545:# undef _GLIBCXX_EXTERN_TEMPLATE
        -:  546:# define _GLIBCXX_EXTERN_TEMPLATE -1
        -:  547:#endif
        -:  548:
        -:  549:
        -:  550:#if _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED
        -:  551:# define __glibcxx_constexpr_assert(cond) \
        -:  552:  if (std::__is_constant_evaluated() && !bool(cond))	\
        -:  553:    __builtin_unreachable() /* precondition violation detected! */
        -:  554:#else
        -:  555:# define __glibcxx_constexpr_assert(unevaluated)
        -:  556:#endif
        -:  557:
        -:  558:#define _GLIBCXX_VERBOSE_ASSERT 1
        -:  559:
        -:  560:// Assert.
        -:  561:#if defined(_GLIBCXX_ASSERTIONS) \
        -:  562:  || defined(_GLIBCXX_PARALLEL) || defined(_GLIBCXX_PARALLEL_ASSERTIONS)
        -:  563:# ifdef _GLIBCXX_VERBOSE_ASSERT
        -:  564:namespace std
        -:  565:{
        -:  566:#pragma GCC visibility push(default)
        -:  567:  // Avoid the use of assert, because we're trying to keep the <cassert>
        -:  568:  // include out of the mix.
        -:  569:  extern "C++" _GLIBCXX_NORETURN
        -:  570:  void
        -:  571:  __glibcxx_assert_fail(const char* __file, int __line,
        -:  572:			const char* __function, const char* __condition)
        -:  573:  _GLIBCXX_NOEXCEPT;
        -:  574:#pragma GCC visibility pop
        -:  575:}
        -:  576:#define __glibcxx_assert_impl(_Condition)				\
        -:  577:  if (__builtin_expect(!bool(_Condition), false))			\
        -:  578:  {									\
        -:  579:    __glibcxx_constexpr_assert(false);					\
        -:  580:    std::__glibcxx_assert_fail(__FILE__, __LINE__, __PRETTY_FUNCTION__,	\
        -:  581:			       #_Condition);				\
        -:  582:  }
        -:  583:# else // ! VERBOSE_ASSERT
        -:  584:# define __glibcxx_assert_impl(_Condition)		\
        -:  585:  if (__builtin_expect(!bool(_Condition), false))	\
        -:  586:  {							\
        -:  587:    __glibcxx_constexpr_assert(false);			\
        -:  588:    __builtin_abort();					\
        -:  589:  }
        -:  590:# endif
        -:  591:#endif
        -:  592:
        -:  593:#if defined(_GLIBCXX_ASSERTIONS)
        -:  594:# define __glibcxx_assert(cond) \
        -:  595:  do { __glibcxx_assert_impl(cond); } while (false)
        -:  596:#else
        -:  597:# define __glibcxx_assert(cond) \
        -:  598:  do { __glibcxx_constexpr_assert(cond); } while (false)
        -:  599:#endif
        -:  600:
        -:  601:// Macro indicating that TSAN is in use.
        -:  602:#if __SANITIZE_THREAD__
        -:  603:#  define _GLIBCXX_TSAN 1
        -:  604:#elif defined __has_feature
        -:  605:# if __has_feature(thread_sanitizer)
        -:  606:#  define _GLIBCXX_TSAN 1
        -:  607:# endif
        -:  608:#endif
        -:  609:
        -:  610:// Macros for race detectors.
        -:  611:// _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A) and
        -:  612:// _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A) should be used to explain
        -:  613:// atomic (lock-free) synchronization to race detectors:
        -:  614:// the race detector will infer a happens-before arc from the former to the
        -:  615:// latter when they share the same argument pointer.
        -:  616://
        -:  617:// The most frequent use case for these macros (and the only case in the
        -:  618:// current implementation of the library) is atomic reference counting:
        -:  619://   void _M_remove_reference()
        -:  620://   {
        -:  621://     _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
        -:  622://     if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount, -1) <= 0)
        -:  623://       {
        -:  624://         _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
        -:  625://         _M_destroy(__a);
        -:  626://       }
        -:  627://   }
        -:  628:// The annotations in this example tell the race detector that all memory
        -:  629:// accesses occurred when the refcount was positive do not race with
        -:  630:// memory accesses which occurred after the refcount became zero.
        -:  631:#ifndef _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE
        -:  632:# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A)
        -:  633:#endif
        -:  634:#ifndef _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER
        -:  635:# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A)
        -:  636:#endif
        -:  637:
        -:  638:// Macros for C linkage: define extern "C" linkage only when using C++.
        -:  639:# define _GLIBCXX_BEGIN_EXTERN_C extern "C" {
        -:  640:# define _GLIBCXX_END_EXTERN_C }
        -:  641:
        -:  642:# define _GLIBCXX_USE_ALLOCATOR_NEW 1
        -:  643:
        -:  644:#ifdef __SIZEOF_INT128__
        -:  645:#if ! defined __GLIBCXX_TYPE_INT_N_0 && ! defined __STRICT_ANSI__
        -:  646:// If __int128 is supported, we expect __GLIBCXX_TYPE_INT_N_0 to be defined
        -:  647:// unless the compiler is in strict mode. If it's not defined and the strict
        -:  648:// macro is not defined, something is wrong.
        -:  649:#warning "__STRICT_ANSI__ seems to have been undefined; this is not supported"
        -:  650:#endif
        -:  651:#endif
        -:  652:
        -:  653:#else // !__cplusplus
        -:  654:# define _GLIBCXX_BEGIN_EXTERN_C
        -:  655:# define _GLIBCXX_END_EXTERN_C
        -:  656:#endif
        -:  657:
        -:  658:
        -:  659:// First includes.
        -:  660:
        -:  661:// Pick up any OS-specific definitions.
        -:  662:#include <bits/os_defines.h>
        -:  663:
        -:  664:// Pick up any CPU-specific definitions.
        -:  665:#include <bits/cpu_defines.h>
        -:  666:
        -:  667:// If platform uses neither visibility nor psuedo-visibility,
        -:  668:// specify empty default for namespace annotation macros.
        -:  669:#ifndef _GLIBCXX_PSEUDO_VISIBILITY
        -:  670:# define _GLIBCXX_PSEUDO_VISIBILITY(V)
        -:  671:#endif
        -:  672:
        -:  673:// Certain function definitions that are meant to be overridable from
        -:  674:// user code are decorated with this macro.  For some targets, this
        -:  675:// macro causes these definitions to be weak.
        -:  676:#ifndef _GLIBCXX_WEAK_DEFINITION
        -:  677:# define _GLIBCXX_WEAK_DEFINITION
        -:  678:#endif
        -:  679:
        -:  680:// By default, we assume that __GXX_WEAK__ also means that there is support
        -:  681:// for declaring functions as weak while not defining such functions.  This
        -:  682:// allows for referring to functions provided by other libraries (e.g.,
        -:  683:// libitm) without depending on them if the respective features are not used.
        -:  684:#ifndef _GLIBCXX_USE_WEAK_REF
        -:  685:# define _GLIBCXX_USE_WEAK_REF __GXX_WEAK__
        -:  686:#endif
        -:  687:
        -:  688:// Conditionally enable annotations for the Transactional Memory TS on C++11.
        -:  689:// Most of the following conditions are due to limitations in the current
        -:  690:// implementation.
        -:  691:#if __cplusplus >= 201103L && _GLIBCXX_USE_CXX11_ABI			\
        -:  692:  && _GLIBCXX_USE_DUAL_ABI && __cpp_transactional_memory >= 201500L	\
        -:  693:  &&  !_GLIBCXX_FULLY_DYNAMIC_STRING && _GLIBCXX_USE_WEAK_REF		\
        -:  694:  && _GLIBCXX_USE_ALLOCATOR_NEW
        -:  695:#define _GLIBCXX_TXN_SAFE transaction_safe
        -:  696:#define _GLIBCXX_TXN_SAFE_DYN transaction_safe_dynamic
        -:  697:#else
        -:  698:#define _GLIBCXX_TXN_SAFE
        -:  699:#define _GLIBCXX_TXN_SAFE_DYN
        -:  700:#endif
        -:  701:
        -:  702:#if __cplusplus > 201402L
        -:  703:// In C++17 mathematical special functions are in namespace std.
        -:  704:# define _GLIBCXX_USE_STD_SPEC_FUNCS 1
        -:  705:#elif __cplusplus >= 201103L && __STDCPP_WANT_MATH_SPEC_FUNCS__ != 0
        -:  706:// For C++11 and C++14 they are in namespace std when requested.
        -:  707:# define _GLIBCXX_USE_STD_SPEC_FUNCS 1
        -:  708:#endif
        -:  709:
        -:  710:// The remainder of the prewritten config is automatic; all the
        -:  711:// user hooks are listed above.
        -:  712:
        -:  713:// Create a boolean flag to be used to determine if --fast-math is set.
        -:  714:#ifdef __FAST_MATH__
        -:  715:# define _GLIBCXX_FAST_MATH 1
        -:  716:#else
        -:  717:# define _GLIBCXX_FAST_MATH 0
        -:  718:#endif
        -:  719:
        -:  720:// This marks string literals in header files to be extracted for eventual
        -:  721:// translation.  It is primarily used for messages in thrown exceptions; see
        -:  722:// src/functexcept.cc.  We use __N because the more traditional _N is used
        -:  723:// for something else under certain OSes (see BADNAMES).
        -:  724:#define __N(msgid)     (msgid)
        -:  725:
        -:  726:// For example, <windows.h> is known to #define min and max as macros...
        -:  727:#undef min
        -:  728:#undef max
        -:  729:
        -:  730:// N.B. these _GLIBCXX_USE_C99_XXX macros are defined unconditionally
        -:  731:// so they should be tested with #if not with #ifdef.
        -:  732:#if __cplusplus >= 201103L
        -:  733:# ifndef _GLIBCXX_USE_C99_MATH
        -:  734:#  define _GLIBCXX_USE_C99_MATH _GLIBCXX11_USE_C99_MATH
        -:  735:# endif
        -:  736:# ifndef _GLIBCXX_USE_C99_COMPLEX
        -:  737:# define _GLIBCXX_USE_C99_COMPLEX _GLIBCXX11_USE_C99_COMPLEX
        -:  738:# endif
        -:  739:# ifndef _GLIBCXX_USE_C99_STDIO
        -:  740:# define _GLIBCXX_USE_C99_STDIO _GLIBCXX11_USE_C99_STDIO
        -:  741:# endif
        -:  742:# ifndef _GLIBCXX_USE_C99_STDLIB
        -:  743:# define _GLIBCXX_USE_C99_STDLIB _GLIBCXX11_USE_C99_STDLIB
        -:  744:# endif
        -:  745:# ifndef _GLIBCXX_USE_C99_WCHAR
        -:  746:# define _GLIBCXX_USE_C99_WCHAR _GLIBCXX11_USE_C99_WCHAR
        -:  747:# endif
        -:  748:#else
        -:  749:# ifndef _GLIBCXX_USE_C99_MATH
        -:  750:#  define _GLIBCXX_USE_C99_MATH _GLIBCXX98_USE_C99_MATH
        -:  751:# endif
        -:  752:# ifndef _GLIBCXX_USE_C99_COMPLEX
        -:  753:# define _GLIBCXX_USE_C99_COMPLEX _GLIBCXX98_USE_C99_COMPLEX
        -:  754:# endif
        -:  755:# ifndef _GLIBCXX_USE_C99_STDIO
        -:  756:# define _GLIBCXX_USE_C99_STDIO _GLIBCXX98_USE_C99_STDIO
        -:  757:# endif
        -:  758:# ifndef _GLIBCXX_USE_C99_STDLIB
        -:  759:# define _GLIBCXX_USE_C99_STDLIB _GLIBCXX98_USE_C99_STDLIB
        -:  760:# endif
        -:  761:# ifndef _GLIBCXX_USE_C99_WCHAR
        -:  762:# define _GLIBCXX_USE_C99_WCHAR _GLIBCXX98_USE_C99_WCHAR
        -:  763:# endif
        -:  764:#endif
        -:  765:
        -:  766:// Unless explicitly specified, enable char8_t extensions only if the core
        -:  767:// language char8_t feature macro is defined.
        -:  768:#ifndef _GLIBCXX_USE_CHAR8_T
        -:  769:# ifdef __cpp_char8_t
        -:  770:#  define _GLIBCXX_USE_CHAR8_T 1
        -:  771:# endif
        -:  772:#endif
        -:  773:#ifdef _GLIBCXX_USE_CHAR8_T
        -:  774:# define __cpp_lib_char8_t 201907L
        -:  775:#endif
        -:  776:
        -:  777:/* Define if __float128 is supported on this host.  */
        -:  778:#if defined(__FLOAT128__) || defined(__SIZEOF_FLOAT128__)
        -:  779:/* For powerpc64 don't use __float128 when it's the same type as long double. */
        -:  780:# if !(defined(_GLIBCXX_LONG_DOUBLE_ALT128_COMPAT) && defined(__LONG_DOUBLE_IEEE128__))
        -:  781:#  define _GLIBCXX_USE_FLOAT128 1
        -:  782:# endif
        -:  783:#endif
        -:  784:
        -:  785:// Define if float has the IEEE binary32 format.
        -:  786:#if __FLT_MANT_DIG__ == 24 \
        -:  787:  && __FLT_MIN_EXP__ == -125 \
        -:  788:  && __FLT_MAX_EXP__ == 128
        -:  789:# define _GLIBCXX_FLOAT_IS_IEEE_BINARY32 1
        -:  790:#endif
        -:  791:
        -:  792:// Define if double has the IEEE binary64 format.
        -:  793:#if __DBL_MANT_DIG__ == 53 \
        -:  794:  && __DBL_MIN_EXP__ == -1021 \
        -:  795:  && __DBL_MAX_EXP__ == 1024
        -:  796:# define _GLIBCXX_DOUBLE_IS_IEEE_BINARY64 1
        -:  797:#endif
        -:  798:
        -:  799:#ifdef __has_builtin
        -:  800:# ifdef __is_identifier
        -:  801:// Intel and older Clang require !__is_identifier for some built-ins:
        -:  802:#  define _GLIBCXX_HAS_BUILTIN(B) __has_builtin(B) || ! __is_identifier(B)
        -:  803:# else
        -:  804:#  define _GLIBCXX_HAS_BUILTIN(B) __has_builtin(B)
        -:  805:# endif
        -:  806:#endif
        -:  807:
        -:  808:#if _GLIBCXX_HAS_BUILTIN(__has_unique_object_representations)
        -:  809:# define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1
        -:  810:#endif
        -:  811:
        -:  812:#if _GLIBCXX_HAS_BUILTIN(__is_aggregate)
        -:  813:# define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1
        -:  814:#endif
        -:  815:
        -:  816:#if _GLIBCXX_HAS_BUILTIN(__is_same)
        -:  817:#  define _GLIBCXX_HAVE_BUILTIN_IS_SAME 1
        -:  818:#endif
        -:  819:
        -:  820:#if _GLIBCXX_HAS_BUILTIN(__builtin_launder)
        -:  821:# define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1
        -:  822:#endif
        -:  823:
        -:  824:#undef _GLIBCXX_HAS_BUILTIN
        -:  825:
        -:  826:// Mark code that should be ignored by the compiler, but seen by Doxygen.
        -:  827:#define _GLIBCXX_DOXYGEN_ONLY(X)
        -:  828:
        -:  829:// PSTL configuration
        -:  830:
        -:  831:#if __cplusplus >= 201703L
        -:  832:// This header is not installed for freestanding:
        -:  833:#if __has_include(<pstl/pstl_config.h>)
        -:  834:// Preserved here so we have some idea which version of upstream we've pulled in
        -:  835:// #define PSTL_VERSION 9000
        -:  836:
        -:  837:// For now this defaults to being based on the presence of Thread Building Blocks
        -:  838:# ifndef _GLIBCXX_USE_TBB_PAR_BACKEND
        -:  839:#  define _GLIBCXX_USE_TBB_PAR_BACKEND __has_include(<tbb/tbb.h>)
        -:  840:# endif
        -:  841:// This section will need some rework when a new (default) backend type is added
        -:  842:# if _GLIBCXX_USE_TBB_PAR_BACKEND
        -:  843:#  define _PSTL_PAR_BACKEND_TBB
        -:  844:# else
        -:  845:#  define _PSTL_PAR_BACKEND_SERIAL
        -:  846:# endif
        -:  847:
        -:  848:# define _PSTL_ASSERT(_Condition) __glibcxx_assert(_Condition)
        -:  849:# define _PSTL_ASSERT_MSG(_Condition, _Message) __glibcxx_assert(_Condition)
        -:  850:
        -:  851:#include <pstl/pstl_config.h>
        -:  852:#endif // __has_include
        -:  853:#endif // C++17
        -:  854:
        -:  855:// End of prewritten config; the settings discovered at configure time follow.
        -:  856:/* config.h.  Generated from config.h.in by configure.  */
        -:  857:/* config.h.in.  Generated from configure.ac by autoheader.  */
        -:  858:
        -:  859:/* Define to 1 if you have the `acosf' function. */
        -:  860:#define _GLIBCXX_HAVE_ACOSF 1
        -:  861:
        -:  862:/* Define to 1 if you have the `acosl' function. */
        -:  863:#define _GLIBCXX_HAVE_ACOSL 1
        -:  864:
        -:  865:/* Define to 1 if you have the `aligned_alloc' function. */
        -:  866:#define _GLIBCXX_HAVE_ALIGNED_ALLOC 1
        -:  867:
        -:  868:/* Define if arc4random is available in <stdlib.h>. */
        -:  869:#define _GLIBCXX_HAVE_ARC4RANDOM 1
        -:  870:
        -:  871:/* Define to 1 if you have the <arpa/inet.h> header file. */
        -:  872:#define _GLIBCXX_HAVE_ARPA_INET_H 1
        -:  873:
        -:  874:/* Define to 1 if you have the `asinf' function. */
        -:  875:#define _GLIBCXX_HAVE_ASINF 1
        -:  876:
        -:  877:/* Define to 1 if you have the `asinl' function. */
        -:  878:#define _GLIBCXX_HAVE_ASINL 1
        -:  879:
        -:  880:/* Define to 1 if the target assembler supports .symver directive. */
        -:  881:/* #undef _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE */
        -:  882:
        -:  883:/* Define to 1 if you have the `atan2f' function. */
        -:  884:#define _GLIBCXX_HAVE_ATAN2F 1
        -:  885:
        -:  886:/* Define to 1 if you have the `atan2l' function. */
        -:  887:#define _GLIBCXX_HAVE_ATAN2L 1
        -:  888:
        -:  889:/* Define to 1 if you have the `atanf' function. */
        -:  890:#define _GLIBCXX_HAVE_ATANF 1
        -:  891:
        -:  892:/* Define to 1 if you have the `atanl' function. */
        -:  893:#define _GLIBCXX_HAVE_ATANL 1
        -:  894:
        -:  895:/* Defined if shared_ptr reference counting should use atomic operations. */
        -:  896:#define _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY 1
        -:  897:
        -:  898:/* Define to 1 if you have the `at_quick_exit' function. */
        -:  899:/* #undef _GLIBCXX_HAVE_AT_QUICK_EXIT */
        -:  900:
        -:  901:/* Define to 1 if the target assembler supports thread-local storage. */
        -:  902:/* #undef _GLIBCXX_HAVE_CC_TLS */
        -:  903:
        -:  904:/* Define to 1 if you have the `ceilf' function. */
        -:  905:#define _GLIBCXX_HAVE_CEILF 1
        -:  906:
        -:  907:/* Define to 1 if you have the `ceill' function. */
        -:  908:#define _GLIBCXX_HAVE_CEILL 1
        -:  909:
        -:  910:/* Define to 1 if you have the <complex.h> header file. */
        -:  911:#define _GLIBCXX_HAVE_COMPLEX_H 1
        -:  912:
        -:  913:/* Define to 1 if you have the `cosf' function. */
        -:  914:#define _GLIBCXX_HAVE_COSF 1
        -:  915:
        -:  916:/* Define to 1 if you have the `coshf' function. */
        -:  917:#define _GLIBCXX_HAVE_COSHF 1
        -:  918:
        -:  919:/* Define to 1 if you have the `coshl' function. */
        -:  920:#define _GLIBCXX_HAVE_COSHL 1
        -:  921:
        -:  922:/* Define to 1 if you have the `cosl' function. */
        -:  923:#define _GLIBCXX_HAVE_COSL 1
        -:  924:
        -:  925:/* Define to 1 if you have the declaration of `strnlen', and to 0 if you
        -:  926:   don't. */
        -:  927:#define _GLIBCXX_HAVE_DECL_STRNLEN 1
        -:  928:
        -:  929:/* Define to 1 if you have the <dirent.h> header file. */
        -:  930:#define _GLIBCXX_HAVE_DIRENT_H 1
        -:  931:
        -:  932:/* Define if dirfd is available in <dirent.h>. */
        -:  933:#define _GLIBCXX_HAVE_DIRFD 1
        -:  934:
        -:  935:/* Define to 1 if you have the <dlfcn.h> header file. */
        -:  936:#define _GLIBCXX_HAVE_DLFCN_H 1
        -:  937:
        -:  938:/* Define to 1 if you have the <endian.h> header file. */
        -:  939:/* #undef _GLIBCXX_HAVE_ENDIAN_H */
        -:  940:
        -:  941:/* Define to 1 if GCC 4.6 supported std::exception_ptr for the target */
        -:  942:#define _GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46 1
        -:  943:
        -:  944:/* Define to 1 if you have the <execinfo.h> header file. */
        -:  945:#define _GLIBCXX_HAVE_EXECINFO_H 1
        -:  946:
        -:  947:/* Define to 1 if you have the `expf' function. */
        -:  948:#define _GLIBCXX_HAVE_EXPF 1
        -:  949:
        -:  950:/* Define to 1 if you have the `expl' function. */
        -:  951:#define _GLIBCXX_HAVE_EXPL 1
        -:  952:
        -:  953:/* Define to 1 if you have the `fabsf' function. */
        -:  954:#define _GLIBCXX_HAVE_FABSF 1
        -:  955:
        -:  956:/* Define to 1 if you have the `fabsl' function. */
        -:  957:#define _GLIBCXX_HAVE_FABSL 1
        -:  958:
        -:  959:/* Define to 1 if you have the <fcntl.h> header file. */
        -:  960:#define _GLIBCXX_HAVE_FCNTL_H 1
        -:  961:
        -:  962:/* Define if fdopendir is available in <dirent.h>. */
        -:  963:#define _GLIBCXX_HAVE_FDOPENDIR 1
        -:  964:
        -:  965:/* Define to 1 if you have the <fenv.h> header file. */
        -:  966:#define _GLIBCXX_HAVE_FENV_H 1
        -:  967:
        -:  968:/* Define to 1 if you have the `finite' function. */
        -:  969:/* #undef _GLIBCXX_HAVE_FINITE */
        -:  970:
        -:  971:/* Define to 1 if you have the `finitef' function. */
        -:  972:/* #undef _GLIBCXX_HAVE_FINITEF */
        -:  973:
        -:  974:/* Define to 1 if you have the `finitel' function. */
        -:  975:/* #undef _GLIBCXX_HAVE_FINITEL */
        -:  976:
        -:  977:/* Define to 1 if you have the <float.h> header file. */
        -:  978:#define _GLIBCXX_HAVE_FLOAT_H 1
        -:  979:
        -:  980:/* Define to 1 if you have the `floorf' function. */
        -:  981:#define _GLIBCXX_HAVE_FLOORF 1
        -:  982:
        -:  983:/* Define to 1 if you have the `floorl' function. */
        -:  984:#define _GLIBCXX_HAVE_FLOORL 1
        -:  985:
        -:  986:/* Define to 1 if you have the `fmodf' function. */
        -:  987:#define _GLIBCXX_HAVE_FMODF 1
        -:  988:
        -:  989:/* Define to 1 if you have the `fmodl' function. */
        -:  990:#define _GLIBCXX_HAVE_FMODL 1
        -:  991:
        -:  992:/* Define to 1 if you have the `fpclass' function. */
        -:  993:/* #undef _GLIBCXX_HAVE_FPCLASS */
        -:  994:
        -:  995:/* Define to 1 if you have the <fp.h> header file. */
        -:  996:/* #undef _GLIBCXX_HAVE_FP_H */
        -:  997:
        -:  998:/* Define to 1 if you have the `frexpf' function. */
        -:  999:#define _GLIBCXX_HAVE_FREXPF 1
        -: 1000:
        -: 1001:/* Define to 1 if you have the `frexpl' function. */
        -: 1002:#define _GLIBCXX_HAVE_FREXPL 1
        -: 1003:
        -: 1004:/* Define if getentropy is available in <unistd.h>. */
        -: 1005:/* #undef _GLIBCXX_HAVE_GETENTROPY */
        -: 1006:
        -: 1007:/* Define if _Unwind_GetIPInfo is available. */
        -: 1008:#define _GLIBCXX_HAVE_GETIPINFO 1
        -: 1009:
        -: 1010:/* Define if gets is available in <stdio.h> before C++14. */
        -: 1011:#define _GLIBCXX_HAVE_GETS 1
        -: 1012:
        -: 1013:/* Define to 1 if you have the `hypot' function. */
        -: 1014:#define _GLIBCXX_HAVE_HYPOT 1
        -: 1015:
        -: 1016:/* Define to 1 if you have the `hypotf' function. */
        -: 1017:#define _GLIBCXX_HAVE_HYPOTF 1
        -: 1018:
        -: 1019:/* Define to 1 if you have the `hypotl' function. */
        -: 1020:#define _GLIBCXX_HAVE_HYPOTL 1
        -: 1021:
        -: 1022:/* Define if you have the iconv() function. */
        -: 1023:#define _GLIBCXX_HAVE_ICONV 1
        -: 1024:
        -: 1025:/* Define to 1 if you have the <ieeefp.h> header file. */
        -: 1026:/* #undef _GLIBCXX_HAVE_IEEEFP_H */
        -: 1027:
        -: 1028:/* Define to 1 if you have the <inttypes.h> header file. */
        -: 1029:#define _GLIBCXX_HAVE_INTTYPES_H 1
        -: 1030:
        -: 1031:/* Define to 1 if you have the `isinf' function. */
        -: 1032:#define _GLIBCXX_HAVE_ISINF 1
        -: 1033:
        -: 1034:/* Define to 1 if you have the `isinff' function. */
        -: 1035:/* #undef _GLIBCXX_HAVE_ISINFF */
        -: 1036:
        -: 1037:/* Define to 1 if you have the `isinfl' function. */
        -: 1038:/* #undef _GLIBCXX_HAVE_ISINFL */
        -: 1039:
        -: 1040:/* Define to 1 if you have the `isnan' function. */
        -: 1041:#define _GLIBCXX_HAVE_ISNAN 1
        -: 1042:
        -: 1043:/* Define to 1 if you have the `isnanf' function. */
        -: 1044:/* #undef _GLIBCXX_HAVE_ISNANF */
        -: 1045:
        -: 1046:/* Define to 1 if you have the `isnanl' function. */
        -: 1047:/* #undef _GLIBCXX_HAVE_ISNANL */
        -: 1048:
        -: 1049:/* Defined if iswblank exists. */
        -: 1050:#define _GLIBCXX_HAVE_ISWBLANK 1
        -: 1051:
        -: 1052:/* Define if LC_MESSAGES is available in <locale.h>. */
        -: 1053:#define _GLIBCXX_HAVE_LC_MESSAGES 1
        -: 1054:
        -: 1055:/* Define to 1 if you have the `ldexpf' function. */
        -: 1056:#define _GLIBCXX_HAVE_LDEXPF 1
        -: 1057:
        -: 1058:/* Define to 1 if you have the `ldexpl' function. */
        -: 1059:#define _GLIBCXX_HAVE_LDEXPL 1
        -: 1060:
        -: 1061:/* Define to 1 if you have the <libintl.h> header file. */
        -: 1062:/* #undef _GLIBCXX_HAVE_LIBINTL_H */
        -: 1063:
        -: 1064:/* Only used in build directory testsuite_hooks.h. */
        -: 1065:#define _GLIBCXX_HAVE_LIMIT_AS 1
        -: 1066:
        -: 1067:/* Only used in build directory testsuite_hooks.h. */
        -: 1068:#define _GLIBCXX_HAVE_LIMIT_DATA 1
        -: 1069:
        -: 1070:/* Only used in build directory testsuite_hooks.h. */
        -: 1071:#define _GLIBCXX_HAVE_LIMIT_FSIZE 1
        -: 1072:
        -: 1073:/* Only used in build directory testsuite_hooks.h. */
        -: 1074:#define _GLIBCXX_HAVE_LIMIT_RSS 1
        -: 1075:
        -: 1076:/* Only used in build directory testsuite_hooks.h. */
        -: 1077:#define _GLIBCXX_HAVE_LIMIT_VMEM 0
        -: 1078:
        -: 1079:/* Define if link is available in <unistd.h>. */
        -: 1080:#define _GLIBCXX_HAVE_LINK 1
        -: 1081:
        -: 1082:/* Define to 1 if you have the <link.h> header file. */
        -: 1083:/* #undef _GLIBCXX_HAVE_LINK_H */
        -: 1084:
        -: 1085:/* Define if futex syscall is available. */
        -: 1086:/* #undef _GLIBCXX_HAVE_LINUX_FUTEX */
        -: 1087:
        -: 1088:/* Define to 1 if you have the <linux/random.h> header file. */
        -: 1089:/* #undef _GLIBCXX_HAVE_LINUX_RANDOM_H */
        -: 1090:
        -: 1091:/* Define to 1 if you have the <linux/types.h> header file. */
        -: 1092:/* #undef _GLIBCXX_HAVE_LINUX_TYPES_H */
        -: 1093:
        -: 1094:/* Define to 1 if you have the <locale.h> header file. */
        -: 1095:#define _GLIBCXX_HAVE_LOCALE_H 1
        -: 1096:
        -: 1097:/* Define to 1 if you have the `log10f' function. */
        -: 1098:#define _GLIBCXX_HAVE_LOG10F 1
        -: 1099:
        -: 1100:/* Define to 1 if you have the `log10l' function. */
        -: 1101:#define _GLIBCXX_HAVE_LOG10L 1
        -: 1102:
        -: 1103:/* Define to 1 if you have the `logf' function. */
        -: 1104:#define _GLIBCXX_HAVE_LOGF 1
        -: 1105:
        -: 1106:/* Define to 1 if you have the `logl' function. */
        -: 1107:#define _GLIBCXX_HAVE_LOGL 1
        -: 1108:
        -: 1109:/* Define to 1 if you have the <machine/endian.h> header file. */
        -: 1110:#define _GLIBCXX_HAVE_MACHINE_ENDIAN_H 1
        -: 1111:
        -: 1112:/* Define to 1 if you have the <machine/param.h> header file. */
        -: 1113:#define _GLIBCXX_HAVE_MACHINE_PARAM_H 1
        -: 1114:
        -: 1115:/* Define if mbstate_t exists in wchar.h. */
        -: 1116:#define _GLIBCXX_HAVE_MBSTATE_T 1
        -: 1117:
        -: 1118:/* Define to 1 if you have the `memalign' function. */
        -: 1119:/* #undef _GLIBCXX_HAVE_MEMALIGN */
        -: 1120:
        -: 1121:/* Define to 1 if you have the <memory.h> header file. */
        -: 1122:#define _GLIBCXX_HAVE_MEMORY_H 1
        -: 1123:
        -: 1124:/* Define to 1 if you have the `modf' function. */
        -: 1125:#define _GLIBCXX_HAVE_MODF 1
        -: 1126:
        -: 1127:/* Define to 1 if you have the `modff' function. */
        -: 1128:#define _GLIBCXX_HAVE_MODFF 1
        -: 1129:
        -: 1130:/* Define to 1 if you have the `modfl' function. */
        -: 1131:#define _GLIBCXX_HAVE_MODFL 1
        -: 1132:
        -: 1133:/* Define to 1 if you have the <nan.h> header file. */
        -: 1134:/* #undef _GLIBCXX_HAVE_NAN_H */
        -: 1135:
        -: 1136:/* Define to 1 if you have the <netdb.h> header file. */
        -: 1137:#define _GLIBCXX_HAVE_NETDB_H 1
        -: 1138:
        -: 1139:/* Define to 1 if you have the <netinet/in.h> header file. */
        -: 1140:#define _GLIBCXX_HAVE_NETINET_IN_H 1
        -: 1141:
        -: 1142:/* Define to 1 if you have the <netinet/tcp.h> header file. */
        -: 1143:#define _GLIBCXX_HAVE_NETINET_TCP_H 1
        -: 1144:
        -: 1145:/* Define if <math.h> defines obsolete isinf function. */
        -: 1146:/* #undef _GLIBCXX_HAVE_OBSOLETE_ISINF */
        -: 1147:
        -: 1148:/* Define if <math.h> defines obsolete isnan function. */
        -: 1149:/* #undef _GLIBCXX_HAVE_OBSOLETE_ISNAN */
        -: 1150:
        -: 1151:/* Define if openat is available in <fcntl.h>. */
        -: 1152:#define _GLIBCXX_HAVE_OPENAT 1
        -: 1153:
        -: 1154:/* Define if poll is available in <poll.h>. */
        -: 1155:#define _GLIBCXX_HAVE_POLL 1
        -: 1156:
        -: 1157:/* Define to 1 if you have the <poll.h> header file. */
        -: 1158:#define _GLIBCXX_HAVE_POLL_H 1
        -: 1159:
        -: 1160:/* Define to 1 if you have the `posix_memalign' function. */
        -: 1161:#define _GLIBCXX_HAVE_POSIX_MEMALIGN 1
        -: 1162:
        -: 1163:/* Define to 1 if POSIX Semaphores with sem_timedwait are available in
        -: 1164:   <semaphore.h>. */
        -: 1165:/* #undef _GLIBCXX_HAVE_POSIX_SEMAPHORE */
        -: 1166:
        -: 1167:/* Define to 1 if you have the `powf' function. */
        -: 1168:#define _GLIBCXX_HAVE_POWF 1
        -: 1169:
        -: 1170:/* Define to 1 if you have the `powl' function. */
        -: 1171:#define _GLIBCXX_HAVE_POWL 1
        -: 1172:
        -: 1173:/* Define to 1 if you have the `qfpclass' function. */
        -: 1174:/* #undef _GLIBCXX_HAVE_QFPCLASS */
        -: 1175:
        -: 1176:/* Define to 1 if you have the `quick_exit' function. */
        -: 1177:/* #undef _GLIBCXX_HAVE_QUICK_EXIT */
        -: 1178:
        -: 1179:/* Define if readlink is available in <unistd.h>. */
        -: 1180:#define _GLIBCXX_HAVE_READLINK 1
        -: 1181:
        -: 1182:/* Define to 1 if you have the `secure_getenv' function. */
        -: 1183:/* #undef _GLIBCXX_HAVE_SECURE_GETENV */
        -: 1184:
        -: 1185:/* Define to 1 if you have the `setenv' function. */
        -: 1186:#define _GLIBCXX_HAVE_SETENV 1
        -: 1187:
        -: 1188:/* Define to 1 if you have the `sincos' function. */
        -: 1189:/* #undef _GLIBCXX_HAVE_SINCOS */
        -: 1190:
        -: 1191:/* Define to 1 if you have the `sincosf' function. */
        -: 1192:/* #undef _GLIBCXX_HAVE_SINCOSF */
        -: 1193:
        -: 1194:/* Define to 1 if you have the `sincosl' function. */
        -: 1195:/* #undef _GLIBCXX_HAVE_SINCOSL */
        -: 1196:
        -: 1197:/* Define to 1 if you have the `sinf' function. */
        -: 1198:#define _GLIBCXX_HAVE_SINF 1
        -: 1199:
        -: 1200:/* Define to 1 if you have the `sinhf' function. */
        -: 1201:#define _GLIBCXX_HAVE_SINHF 1
        -: 1202:
        -: 1203:/* Define to 1 if you have the `sinhl' function. */
        -: 1204:#define _GLIBCXX_HAVE_SINHL 1
        -: 1205:
        -: 1206:/* Define to 1 if you have the `sinl' function. */
        -: 1207:#define _GLIBCXX_HAVE_SINL 1
        -: 1208:
        -: 1209:/* Defined if sleep exists. */
        -: 1210:/* #undef _GLIBCXX_HAVE_SLEEP */
        -: 1211:
        -: 1212:/* Define to 1 if you have the `sockatmark' function. */
        -: 1213:#define _GLIBCXX_HAVE_SOCKATMARK 1
        -: 1214:
        -: 1215:/* Define to 1 if you have the `sqrtf' function. */
        -: 1216:#define _GLIBCXX_HAVE_SQRTF 1
        -: 1217:
        -: 1218:/* Define to 1 if you have the `sqrtl' function. */
        -: 1219:#define _GLIBCXX_HAVE_SQRTL 1
        -: 1220:
        -: 1221:/* Define if the <stacktrace> header is supported. */
        -: 1222:/* #undef _GLIBCXX_HAVE_STACKTRACE */
        -: 1223:
        -: 1224:/* Define to 1 if you have the <stdalign.h> header file. */
        -: 1225:#define _GLIBCXX_HAVE_STDALIGN_H 1
        -: 1226:
        -: 1227:/* Define to 1 if you have the <stdbool.h> header file. */
        -: 1228:#define _GLIBCXX_HAVE_STDBOOL_H 1
        -: 1229:
        -: 1230:/* Define to 1 if you have the <stdint.h> header file. */
        -: 1231:#define _GLIBCXX_HAVE_STDINT_H 1
        -: 1232:
        -: 1233:/* Define to 1 if you have the <stdlib.h> header file. */
        -: 1234:#define _GLIBCXX_HAVE_STDLIB_H 1
        -: 1235:
        -: 1236:/* Define if strerror_l is available in <string.h>. */
        -: 1237:/* #undef _GLIBCXX_HAVE_STRERROR_L */
        -: 1238:
        -: 1239:/* Define if strerror_r is available in <string.h>. */
        -: 1240:#define _GLIBCXX_HAVE_STRERROR_R 1
        -: 1241:
        -: 1242:/* Define to 1 if you have the <strings.h> header file. */
        -: 1243:#define _GLIBCXX_HAVE_STRINGS_H 1
        -: 1244:
        -: 1245:/* Define to 1 if you have the <string.h> header file. */
        -: 1246:#define _GLIBCXX_HAVE_STRING_H 1
        -: 1247:
        -: 1248:/* Define to 1 if you have the `strtof' function. */
        -: 1249:#define _GLIBCXX_HAVE_STRTOF 1
        -: 1250:
        -: 1251:/* Define to 1 if you have the `strtold' function. */
        -: 1252:#define _GLIBCXX_HAVE_STRTOLD 1
        -: 1253:
        -: 1254:/* Define to 1 if `d_type' is a member of `struct dirent'. */
        -: 1255:#define _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE 1
        -: 1256:
        -: 1257:/* Define if strxfrm_l is available in <string.h>. */
        -: 1258:/* #undef _GLIBCXX_HAVE_STRXFRM_L */
        -: 1259:
        -: 1260:/* Define if symlink is available in <unistd.h>. */
        -: 1261:#define _GLIBCXX_HAVE_SYMLINK 1
        -: 1262:
        -: 1263:/* Define to 1 if the target runtime linker supports binding the same symbol
        -: 1264:   to different versions. */
        -: 1265:#define _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT 1
        -: 1266:
        -: 1267:/* Define to 1 if you have the <sys/filio.h> header file. */
        -: 1268:#define _GLIBCXX_HAVE_SYS_FILIO_H 1
        -: 1269:
        -: 1270:/* Define to 1 if you have the <sys/ioctl.h> header file. */
        -: 1271:#define _GLIBCXX_HAVE_SYS_IOCTL_H 1
        -: 1272:
        -: 1273:/* Define to 1 if you have the <sys/ipc.h> header file. */
        -: 1274:#define _GLIBCXX_HAVE_SYS_IPC_H 1
        -: 1275:
        -: 1276:/* Define to 1 if you have the <sys/isa_defs.h> header file. */
        -: 1277:/* #undef _GLIBCXX_HAVE_SYS_ISA_DEFS_H */
        -: 1278:
        -: 1279:/* Define to 1 if you have the <sys/machine.h> header file. */
        -: 1280:/* #undef _GLIBCXX_HAVE_SYS_MACHINE_H */
        -: 1281:
        -: 1282:/* Define to 1 if you have the <sys/mman.h> header file. */
        -: 1283:/* #undef _GLIBCXX_HAVE_SYS_MMAN_H */
        -: 1284:
        -: 1285:/* Define to 1 if you have the <sys/param.h> header file. */
        -: 1286:#define _GLIBCXX_HAVE_SYS_PARAM_H 1
        -: 1287:
        -: 1288:/* Define to 1 if you have the <sys/resource.h> header file. */
        -: 1289:#define _GLIBCXX_HAVE_SYS_RESOURCE_H 1
        -: 1290:
        -: 1291:/* Define to 1 if you have a suitable <sys/sdt.h> header file */
        -: 1292:/* #undef _GLIBCXX_HAVE_SYS_SDT_H */
        -: 1293:
        -: 1294:/* Define to 1 if you have the <sys/sem.h> header file. */
        -: 1295:#define _GLIBCXX_HAVE_SYS_SEM_H 1
        -: 1296:
        -: 1297:/* Define to 1 if you have the <sys/socket.h> header file. */
        -: 1298:#define _GLIBCXX_HAVE_SYS_SOCKET_H 1
        -: 1299:
        -: 1300:/* Define to 1 if you have the <sys/statvfs.h> header file. */
        -: 1301:#define _GLIBCXX_HAVE_SYS_STATVFS_H 1
        -: 1302:
        -: 1303:/* Define to 1 if you have the <sys/stat.h> header file. */
        -: 1304:#define _GLIBCXX_HAVE_SYS_STAT_H 1
        -: 1305:
        -: 1306:/* Define to 1 if you have the <sys/sysinfo.h> header file. */
        -: 1307:/* #undef _GLIBCXX_HAVE_SYS_SYSINFO_H */
        -: 1308:
        -: 1309:/* Define to 1 if you have the <sys/time.h> header file. */
        -: 1310:#define _GLIBCXX_HAVE_SYS_TIME_H 1
        -: 1311:
        -: 1312:/* Define to 1 if you have the <sys/types.h> header file. */
        -: 1313:#define _GLIBCXX_HAVE_SYS_TYPES_H 1
        -: 1314:
        -: 1315:/* Define to 1 if you have the <sys/uio.h> header file. */
        -: 1316:#define _GLIBCXX_HAVE_SYS_UIO_H 1
        -: 1317:
        -: 1318:/* Define if S_IFREG is available in <sys/stat.h>. */
        -: 1319:/* #undef _GLIBCXX_HAVE_S_IFREG */
        -: 1320:
        -: 1321:/* Define if S_ISREG is available in <sys/stat.h>. */
        -: 1322:#define _GLIBCXX_HAVE_S_ISREG 1
        -: 1323:
        -: 1324:/* Define to 1 if you have the `tanf' function. */
        -: 1325:#define _GLIBCXX_HAVE_TANF 1
        -: 1326:
        -: 1327:/* Define to 1 if you have the `tanhf' function. */
        -: 1328:#define _GLIBCXX_HAVE_TANHF 1
        -: 1329:
        -: 1330:/* Define to 1 if you have the `tanhl' function. */
        -: 1331:#define _GLIBCXX_HAVE_TANHL 1
        -: 1332:
        -: 1333:/* Define to 1 if you have the `tanl' function. */
        -: 1334:#define _GLIBCXX_HAVE_TANL 1
        -: 1335:
        -: 1336:/* Define to 1 if you have the <tgmath.h> header file. */
        -: 1337:#define _GLIBCXX_HAVE_TGMATH_H 1
        -: 1338:
        -: 1339:/* Define to 1 if you have the `timespec_get' function. */
        -: 1340:#define _GLIBCXX_HAVE_TIMESPEC_GET 1
        -: 1341:
        -: 1342:/* Define to 1 if the target supports thread-local storage. */
        -: 1343:#define _GLIBCXX_HAVE_TLS 1
        -: 1344:
        -: 1345:/* Define if truncate is available in <unistd.h>. */
        -: 1346:#define _GLIBCXX_HAVE_TRUNCATE 1
        -: 1347:
        -: 1348:/* Define to 1 if you have the <uchar.h> header file. */
        -: 1349:/* #undef _GLIBCXX_HAVE_UCHAR_H */
        -: 1350:
        -: 1351:/* Define to 1 if you have the <unistd.h> header file. */
        -: 1352:#define _GLIBCXX_HAVE_UNISTD_H 1
        -: 1353:
        -: 1354:/* Define if unlinkat is available in <fcntl.h>. */
        -: 1355:#define _GLIBCXX_HAVE_UNLINKAT 1
        -: 1356:
        -: 1357:/* Define to 1 if you have the `uselocale' function. */
        -: 1358:#define _GLIBCXX_HAVE_USELOCALE 1
        -: 1359:
        -: 1360:/* Defined if usleep exists. */
        -: 1361:/* #undef _GLIBCXX_HAVE_USLEEP */
        -: 1362:
        -: 1363:/* Define to 1 if you have the <utime.h> header file. */
        -: 1364:#define _GLIBCXX_HAVE_UTIME_H 1
        -: 1365:
        -: 1366:/* Defined if vfwscanf exists. */
        -: 1367:#define _GLIBCXX_HAVE_VFWSCANF 1
        -: 1368:
        -: 1369:/* Defined if vswscanf exists. */
        -: 1370:#define _GLIBCXX_HAVE_VSWSCANF 1
        -: 1371:
        -: 1372:/* Defined if vwscanf exists. */
        -: 1373:#define _GLIBCXX_HAVE_VWSCANF 1
        -: 1374:
        -: 1375:/* Define to 1 if you have the <wchar.h> header file. */
        -: 1376:#define _GLIBCXX_HAVE_WCHAR_H 1
        -: 1377:
        -: 1378:/* Defined if wcstof exists. */
        -: 1379:#define _GLIBCXX_HAVE_WCSTOF 1
        -: 1380:
        -: 1381:/* Define to 1 if you have the <wctype.h> header file. */
        -: 1382:#define _GLIBCXX_HAVE_WCTYPE_H 1
        -: 1383:
        -: 1384:/* Defined if Sleep exists. */
        -: 1385:/* #undef _GLIBCXX_HAVE_WIN32_SLEEP */
        -: 1386:
        -: 1387:/* Define if writev is available in <sys/uio.h>. */
        -: 1388:#define _GLIBCXX_HAVE_WRITEV 1
        -: 1389:
        -: 1390:/* Define to 1 if you have the <xlocale.h> header file. */
        -: 1391:#define _GLIBCXX_HAVE_XLOCALE_H 1
        -: 1392:
        -: 1393:/* Define to 1 if you have the `_acosf' function. */
        -: 1394:/* #undef _GLIBCXX_HAVE__ACOSF */
        -: 1395:
        -: 1396:/* Define to 1 if you have the `_acosl' function. */
        -: 1397:/* #undef _GLIBCXX_HAVE__ACOSL */
        -: 1398:
        -: 1399:/* Define to 1 if you have the `_aligned_malloc' function. */
        -: 1400:/* #undef _GLIBCXX_HAVE__ALIGNED_MALLOC */
        -: 1401:
        -: 1402:/* Define to 1 if you have the `_asinf' function. */
        -: 1403:/* #undef _GLIBCXX_HAVE__ASINF */
        -: 1404:
        -: 1405:/* Define to 1 if you have the `_asinl' function. */
        -: 1406:/* #undef _GLIBCXX_HAVE__ASINL */
        -: 1407:
        -: 1408:/* Define to 1 if you have the `_atan2f' function. */
        -: 1409:/* #undef _GLIBCXX_HAVE__ATAN2F */
        -: 1410:
        -: 1411:/* Define to 1 if you have the `_atan2l' function. */
        -: 1412:/* #undef _GLIBCXX_HAVE__ATAN2L */
        -: 1413:
        -: 1414:/* Define to 1 if you have the `_atanf' function. */
        -: 1415:/* #undef _GLIBCXX_HAVE__ATANF */
        -: 1416:
        -: 1417:/* Define to 1 if you have the `_atanl' function. */
        -: 1418:/* #undef _GLIBCXX_HAVE__ATANL */
        -: 1419:
        -: 1420:/* Define to 1 if you have the `_ceilf' function. */
        -: 1421:/* #undef _GLIBCXX_HAVE__CEILF */
        -: 1422:
        -: 1423:/* Define to 1 if you have the `_ceill' function. */
        -: 1424:/* #undef _GLIBCXX_HAVE__CEILL */
        -: 1425:
        -: 1426:/* Define to 1 if you have the `_cosf' function. */
        -: 1427:/* #undef _GLIBCXX_HAVE__COSF */
        -: 1428:
        -: 1429:/* Define to 1 if you have the `_coshf' function. */
        -: 1430:/* #undef _GLIBCXX_HAVE__COSHF */
        -: 1431:
        -: 1432:/* Define to 1 if you have the `_coshl' function. */
        -: 1433:/* #undef _GLIBCXX_HAVE__COSHL */
        -: 1434:
        -: 1435:/* Define to 1 if you have the `_cosl' function. */
        -: 1436:/* #undef _GLIBCXX_HAVE__COSL */
        -: 1437:
        -: 1438:/* Define to 1 if you have the `_expf' function. */
        -: 1439:/* #undef _GLIBCXX_HAVE__EXPF */
        -: 1440:
        -: 1441:/* Define to 1 if you have the `_expl' function. */
        -: 1442:/* #undef _GLIBCXX_HAVE__EXPL */
        -: 1443:
        -: 1444:/* Define to 1 if you have the `_fabsf' function. */
        -: 1445:/* #undef _GLIBCXX_HAVE__FABSF */
        -: 1446:
        -: 1447:/* Define to 1 if you have the `_fabsl' function. */
        -: 1448:/* #undef _GLIBCXX_HAVE__FABSL */
        -: 1449:
        -: 1450:/* Define to 1 if you have the `_finite' function. */
        -: 1451:/* #undef _GLIBCXX_HAVE__FINITE */
        -: 1452:
        -: 1453:/* Define to 1 if you have the `_finitef' function. */
        -: 1454:/* #undef _GLIBCXX_HAVE__FINITEF */
        -: 1455:
        -: 1456:/* Define to 1 if you have the `_finitel' function. */
        -: 1457:/* #undef _GLIBCXX_HAVE__FINITEL */
        -: 1458:
        -: 1459:/* Define to 1 if you have the `_floorf' function. */
        -: 1460:/* #undef _GLIBCXX_HAVE__FLOORF */
        -: 1461:
        -: 1462:/* Define to 1 if you have the `_floorl' function. */
        -: 1463:/* #undef _GLIBCXX_HAVE__FLOORL */
        -: 1464:
        -: 1465:/* Define to 1 if you have the `_fmodf' function. */
        -: 1466:/* #undef _GLIBCXX_HAVE__FMODF */
        -: 1467:
        -: 1468:/* Define to 1 if you have the `_fmodl' function. */
        -: 1469:/* #undef _GLIBCXX_HAVE__FMODL */
        -: 1470:
        -: 1471:/* Define to 1 if you have the `_fpclass' function. */
        -: 1472:/* #undef _GLIBCXX_HAVE__FPCLASS */
        -: 1473:
        -: 1474:/* Define to 1 if you have the `_frexpf' function. */
        -: 1475:/* #undef _GLIBCXX_HAVE__FREXPF */
        -: 1476:
        -: 1477:/* Define to 1 if you have the `_frexpl' function. */
        -: 1478:/* #undef _GLIBCXX_HAVE__FREXPL */
        -: 1479:
        -: 1480:/* Define to 1 if you have the `_hypot' function. */
        -: 1481:/* #undef _GLIBCXX_HAVE__HYPOT */
        -: 1482:
        -: 1483:/* Define to 1 if you have the `_hypotf' function. */
        -: 1484:/* #undef _GLIBCXX_HAVE__HYPOTF */
        -: 1485:
        -: 1486:/* Define to 1 if you have the `_hypotl' function. */
        -: 1487:/* #undef _GLIBCXX_HAVE__HYPOTL */
        -: 1488:
        -: 1489:/* Define to 1 if you have the `_isinf' function. */
        -: 1490:/* #undef _GLIBCXX_HAVE__ISINF */
        -: 1491:
        -: 1492:/* Define to 1 if you have the `_isinff' function. */
        -: 1493:/* #undef _GLIBCXX_HAVE__ISINFF */
        -: 1494:
        -: 1495:/* Define to 1 if you have the `_isinfl' function. */
        -: 1496:/* #undef _GLIBCXX_HAVE__ISINFL */
        -: 1497:
        -: 1498:/* Define to 1 if you have the `_isnan' function. */
        -: 1499:/* #undef _GLIBCXX_HAVE__ISNAN */
        -: 1500:
        -: 1501:/* Define to 1 if you have the `_isnanf' function. */
        -: 1502:/* #undef _GLIBCXX_HAVE__ISNANF */
        -: 1503:
        -: 1504:/* Define to 1 if you have the `_isnanl' function. */
        -: 1505:/* #undef _GLIBCXX_HAVE__ISNANL */
        -: 1506:
        -: 1507:/* Define to 1 if you have the `_ldexpf' function. */
        -: 1508:/* #undef _GLIBCXX_HAVE__LDEXPF */
        -: 1509:
        -: 1510:/* Define to 1 if you have the `_ldexpl' function. */
        -: 1511:/* #undef _GLIBCXX_HAVE__LDEXPL */
        -: 1512:
        -: 1513:/* Define to 1 if you have the `_log10f' function. */
        -: 1514:/* #undef _GLIBCXX_HAVE__LOG10F */
        -: 1515:
        -: 1516:/* Define to 1 if you have the `_log10l' function. */
        -: 1517:/* #undef _GLIBCXX_HAVE__LOG10L */
        -: 1518:
        -: 1519:/* Define to 1 if you have the `_logf' function. */
        -: 1520:/* #undef _GLIBCXX_HAVE__LOGF */
        -: 1521:
        -: 1522:/* Define to 1 if you have the `_logl' function. */
        -: 1523:/* #undef _GLIBCXX_HAVE__LOGL */
        -: 1524:
        -: 1525:/* Define to 1 if you have the `_modf' function. */
        -: 1526:/* #undef _GLIBCXX_HAVE__MODF */
        -: 1527:
        -: 1528:/* Define to 1 if you have the `_modff' function. */
        -: 1529:/* #undef _GLIBCXX_HAVE__MODFF */
        -: 1530:
        -: 1531:/* Define to 1 if you have the `_modfl' function. */
        -: 1532:/* #undef _GLIBCXX_HAVE__MODFL */
        -: 1533:
        -: 1534:/* Define to 1 if you have the `_powf' function. */
        -: 1535:/* #undef _GLIBCXX_HAVE__POWF */
        -: 1536:
        -: 1537:/* Define to 1 if you have the `_powl' function. */
        -: 1538:/* #undef _GLIBCXX_HAVE__POWL */
        -: 1539:
        -: 1540:/* Define to 1 if you have the `_qfpclass' function. */
        -: 1541:/* #undef _GLIBCXX_HAVE__QFPCLASS */
        -: 1542:
        -: 1543:/* Define to 1 if you have the `_sincos' function. */
        -: 1544:/* #undef _GLIBCXX_HAVE__SINCOS */
        -: 1545:
        -: 1546:/* Define to 1 if you have the `_sincosf' function. */
        -: 1547:/* #undef _GLIBCXX_HAVE__SINCOSF */
        -: 1548:
        -: 1549:/* Define to 1 if you have the `_sincosl' function. */
        -: 1550:/* #undef _GLIBCXX_HAVE__SINCOSL */
        -: 1551:
        -: 1552:/* Define to 1 if you have the `_sinf' function. */
        -: 1553:/* #undef _GLIBCXX_HAVE__SINF */
        -: 1554:
        -: 1555:/* Define to 1 if you have the `_sinhf' function. */
        -: 1556:/* #undef _GLIBCXX_HAVE__SINHF */
        -: 1557:
        -: 1558:/* Define to 1 if you have the `_sinhl' function. */
        -: 1559:/* #undef _GLIBCXX_HAVE__SINHL */
        -: 1560:
        -: 1561:/* Define to 1 if you have the `_sinl' function. */
        -: 1562:/* #undef _GLIBCXX_HAVE__SINL */
        -: 1563:
        -: 1564:/* Define to 1 if you have the `_sqrtf' function. */
        -: 1565:/* #undef _GLIBCXX_HAVE__SQRTF */
        -: 1566:
        -: 1567:/* Define to 1 if you have the `_sqrtl' function. */
        -: 1568:/* #undef _GLIBCXX_HAVE__SQRTL */
        -: 1569:
        -: 1570:/* Define to 1 if you have the `_tanf' function. */
        -: 1571:/* #undef _GLIBCXX_HAVE__TANF */
        -: 1572:
        -: 1573:/* Define to 1 if you have the `_tanhf' function. */
        -: 1574:/* #undef _GLIBCXX_HAVE__TANHF */
        -: 1575:
        -: 1576:/* Define to 1 if you have the `_tanhl' function. */
        -: 1577:/* #undef _GLIBCXX_HAVE__TANHL */
        -: 1578:
        -: 1579:/* Define to 1 if you have the `_tanl' function. */
        -: 1580:/* #undef _GLIBCXX_HAVE__TANL */
        -: 1581:
        -: 1582:/* Define to 1 if you have the `_wfopen' function. */
        -: 1583:/* #undef _GLIBCXX_HAVE__WFOPEN */
        -: 1584:
        -: 1585:/* Define to 1 if you have the `__cxa_thread_atexit' function. */
        -: 1586:#define _GLIBCXX_HAVE___CXA_THREAD_ATEXIT 1
        -: 1587:
        -: 1588:/* Define to 1 if you have the `__cxa_thread_atexit_impl' function. */
        -: 1589:/* #undef _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL */
        -: 1590:
        -: 1591:/* Define as const if the declaration of iconv() needs const. */
        -: 1592:#define _GLIBCXX_ICONV_CONST 
        -: 1593:
        -: 1594:/* Define to the sub-directory in which libtool stores uninstalled libraries.
        -: 1595:   */
        -: 1596:#define _GLIBCXX_LT_OBJDIR ".libs/"
        -: 1597:
        -: 1598:/* Name of package */
        -: 1599:/* #undef _GLIBCXX_PACKAGE */
        -: 1600:
        -: 1601:/* Define to the address where bug reports for this package should be sent. */
        -: 1602:#define _GLIBCXX_PACKAGE_BUGREPORT ""
        -: 1603:
        -: 1604:/* Define to the full name of this package. */
        -: 1605:#define _GLIBCXX_PACKAGE_NAME "package-unused"
        -: 1606:
        -: 1607:/* Define to the full name and version of this package. */
        -: 1608:#define _GLIBCXX_PACKAGE_STRING "package-unused version-unused"
        -: 1609:
        -: 1610:/* Define to the one symbol short name of this package. */
        -: 1611:#define _GLIBCXX_PACKAGE_TARNAME "libstdc++"
        -: 1612:
        -: 1613:/* Define to the home page for this package. */
        -: 1614:#define _GLIBCXX_PACKAGE_URL ""
        -: 1615:
        -: 1616:/* Define to the version of this package. */
        -: 1617:#define _GLIBCXX_PACKAGE__GLIBCXX_VERSION "version-unused"
        -: 1618:
        -: 1619:/* The size of `char', as computed by sizeof. */
        -: 1620:/* #undef SIZEOF_CHAR */
        -: 1621:
        -: 1622:/* The size of `int', as computed by sizeof. */
        -: 1623:/* #undef SIZEOF_INT */
        -: 1624:
        -: 1625:/* The size of `long', as computed by sizeof. */
        -: 1626:/* #undef SIZEOF_LONG */
        -: 1627:
        -: 1628:/* The size of `short', as computed by sizeof. */
        -: 1629:/* #undef SIZEOF_SHORT */
        -: 1630:
        -: 1631:/* The size of `void *', as computed by sizeof. */
        -: 1632:/* #undef SIZEOF_VOID_P */
        -: 1633:
        -: 1634:/* Define to 1 if you have the ANSI C header files. */
        -: 1635:#define _GLIBCXX_STDC_HEADERS 1
        -: 1636:
        -: 1637:/* Version number of package */
        -: 1638:/* #undef _GLIBCXX_VERSION */
        -: 1639:
        -: 1640:/* Enable large inode numbers on Mac OS X 10.5.  */
        -: 1641:#ifndef _GLIBCXX_DARWIN_USE_64_BIT_INODE
        -: 1642:# define _GLIBCXX_DARWIN_USE_64_BIT_INODE 1
        -: 1643:#endif
        -: 1644:
        -: 1645:/* Number of bits in a file offset, on hosts where this is settable. */
        -: 1646:/* #undef _GLIBCXX_FILE_OFFSET_BITS */
        -: 1647:
        -: 1648:/* Define if C99 functions in <complex.h> should be used in <complex> for
        -: 1649:   C++11. Using compiler builtins for these functions requires corresponding
        -: 1650:   C99 library functions to be present. */
        -: 1651:#define _GLIBCXX11_USE_C99_COMPLEX 1
        -: 1652:
        -: 1653:/* Define if C99 functions or macros in <math.h> should be imported in <cmath>
        -: 1654:   in namespace std for C++11. */
        -: 1655:#define _GLIBCXX11_USE_C99_MATH 1
        -: 1656:
        -: 1657:/* Define if C99 functions or macros in <stdio.h> should be imported in
        -: 1658:   <cstdio> in namespace std for C++11. */
        -: 1659:#define _GLIBCXX11_USE_C99_STDIO 1
        -: 1660:
        -: 1661:/* Define if C99 functions or macros in <stdlib.h> should be imported in
        -: 1662:   <cstdlib> in namespace std for C++11. */
        -: 1663:#define _GLIBCXX11_USE_C99_STDLIB 1
        -: 1664:
        -: 1665:/* Define if C99 functions or macros in <wchar.h> should be imported in
        -: 1666:   <cwchar> in namespace std for C++11. */
        -: 1667:#define _GLIBCXX11_USE_C99_WCHAR 1
        -: 1668:
        -: 1669:/* Define if C99 functions in <complex.h> should be used in <complex> for
        -: 1670:   C++98. Using compiler builtins for these functions requires corresponding
        -: 1671:   C99 library functions to be present. */
        -: 1672:#define _GLIBCXX98_USE_C99_COMPLEX 1
        -: 1673:
        -: 1674:/* Define if C99 functions or macros in <math.h> should be imported in <cmath>
        -: 1675:   in namespace std for C++98. */
        -: 1676:#define _GLIBCXX98_USE_C99_MATH 1
        -: 1677:
        -: 1678:/* Define if C99 functions or macros in <stdio.h> should be imported in
        -: 1679:   <cstdio> in namespace std for C++98. */
        -: 1680:#define _GLIBCXX98_USE_C99_STDIO 1
        -: 1681:
        -: 1682:/* Define if C99 functions or macros in <stdlib.h> should be imported in
        -: 1683:   <cstdlib> in namespace std for C++98. */
        -: 1684:#define _GLIBCXX98_USE_C99_STDLIB 1
        -: 1685:
        -: 1686:/* Define if C99 functions or macros in <wchar.h> should be imported in
        -: 1687:   <cwchar> in namespace std for C++98. */
        -: 1688:#define _GLIBCXX98_USE_C99_WCHAR 1
        -: 1689:
        -: 1690:/* Define if the compiler supports C++11 atomics. */
        -: 1691:#define _GLIBCXX_ATOMIC_BUILTINS 1
        -: 1692:
        -: 1693:/* Define to use concept checking code from the boost libraries. */
        -: 1694:/* #undef _GLIBCXX_CONCEPT_CHECKS */
        -: 1695:
        -: 1696:/* Define to 1 if a fully dynamic basic_string is wanted, 0 to disable,
        -: 1697:   undefined for platform defaults */
        -: 1698:#define _GLIBCXX_FULLY_DYNAMIC_STRING 0
        -: 1699:
        -: 1700:/* Define if gthreads library is available. */
        -: 1701:#define _GLIBCXX_HAS_GTHREADS 1
        -: 1702:
        -: 1703:/* Define to 1 if a full hosted library is built, or 0 if freestanding. */
        -: 1704:#define _GLIBCXX_HOSTED 1
        -: 1705:
        -: 1706:/* Define if compatibility should be provided for alternative 128-bit long
        -: 1707:   double formats. */
        -: 1708:
        -: 1709:/* Define if compatibility should be provided for -mlong-double-64. */
        -: 1710:
        -: 1711:/* Define to the letter to which size_t is mangled. */
        -: 1712:#define _GLIBCXX_MANGLE_SIZE_T m
        -: 1713:
        -: 1714:/* Define if C99 llrint and llround functions are missing from <math.h>. */
        -: 1715:/* #undef _GLIBCXX_NO_C99_ROUNDING_FUNCS */
        -: 1716:
        -: 1717:/* Defined if no way to sleep is available. */
        -: 1718:/* #undef _GLIBCXX_NO_SLEEP */
        -: 1719:
        -: 1720:/* Define if ptrdiff_t is int. */
        -: 1721:/* #undef _GLIBCXX_PTRDIFF_T_IS_INT */
        -: 1722:
        -: 1723:/* Define if using setrlimit to set resource limits during "make check" */
        -: 1724:#define _GLIBCXX_RES_LIMITS 1
        -: 1725:
        -: 1726:/* Define if size_t is unsigned int. */
        -: 1727:/* #undef _GLIBCXX_SIZE_T_IS_UINT */
        -: 1728:
        -: 1729:/* Define to the value of the EOF integer constant. */
        -: 1730:#define _GLIBCXX_STDIO_EOF -1
        -: 1731:
        -: 1732:/* Define to the value of the SEEK_CUR integer constant. */
        -: 1733:#define _GLIBCXX_STDIO_SEEK_CUR 1
        -: 1734:
        -: 1735:/* Define to the value of the SEEK_END integer constant. */
        -: 1736:#define _GLIBCXX_STDIO_SEEK_END 2
        -: 1737:
        -: 1738:/* Define to use symbol versioning in the shared library. */
        -: 1739:#define _GLIBCXX_SYMVER 1
        -: 1740:
        -: 1741:/* Define to use darwin versioning in the shared library. */
        -: 1742:#define _GLIBCXX_SYMVER_DARWIN 1
        -: 1743:
        -: 1744:/* Define to use GNU versioning in the shared library. */
        -: 1745:/* #undef _GLIBCXX_SYMVER_GNU */
        -: 1746:
        -: 1747:/* Define to use GNU namespace versioning in the shared library. */
        -: 1748:/* #undef _GLIBCXX_SYMVER_GNU_NAMESPACE */
        -: 1749:
        -: 1750:/* Define to use Sun versioning in the shared library. */
        -: 1751:/* #undef _GLIBCXX_SYMVER_SUN */
        -: 1752:
        -: 1753:/* Define if C11 functions in <uchar.h> should be imported into namespace std
        -: 1754:   in <cuchar>. */
        -: 1755:/* #undef _GLIBCXX_USE_C11_UCHAR_CXX11 */
        -: 1756:
        -: 1757:/* Define if C99 functions or macros from <wchar.h>, <math.h>, <complex.h>,
        -: 1758:   <stdio.h>, and <stdlib.h> can be used or exposed. */
        -: 1759:#define _GLIBCXX_USE_C99 1
        -: 1760:
        -: 1761:/* Define if C99 functions in <complex.h> should be used in <tr1/complex>.
        -: 1762:   Using compiler builtins for these functions requires corresponding C99
        -: 1763:   library functions to be present. */
        -: 1764:#define _GLIBCXX_USE_C99_COMPLEX_TR1 1
        -: 1765:
        -: 1766:/* Define if C99 functions in <ctype.h> should be imported in <tr1/cctype> in
        -: 1767:   namespace std::tr1. */
        -: 1768:#define _GLIBCXX_USE_C99_CTYPE_TR1 1
        -: 1769:
        -: 1770:/* Define if C99 functions in <fenv.h> should be imported in <tr1/cfenv> in
        -: 1771:   namespace std::tr1. */
        -: 1772:#define _GLIBCXX_USE_C99_FENV_TR1 1
        -: 1773:
        -: 1774:/* Define if C99 functions in <inttypes.h> should be imported in
        -: 1775:   <tr1/cinttypes> in namespace std::tr1. */
        -: 1776:#define _GLIBCXX_USE_C99_INTTYPES_TR1 1
        -: 1777:
        -: 1778:/* Define if wchar_t C99 functions in <inttypes.h> should be imported in
        -: 1779:   <tr1/cinttypes> in namespace std::tr1. */
        -: 1780:#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 1
        -: 1781:
        -: 1782:/* Define if C99 functions or macros in <math.h> should be imported in
        -: 1783:   <tr1/cmath> in namespace std::tr1. */
        -: 1784:#define _GLIBCXX_USE_C99_MATH_TR1 1
        -: 1785:
        -: 1786:/* Define if C99 types in <stdint.h> should be imported in <tr1/cstdint> in
        -: 1787:   namespace std::tr1. */
        -: 1788:#define _GLIBCXX_USE_C99_STDINT_TR1 1
        -: 1789:
        -: 1790:/* Define if usable chdir is available in <unistd.h>. */
        -: 1791:#define _GLIBCXX_USE_CHDIR 1
        -: 1792:
        -: 1793:/* Define if usable chmod is available in <sys/stat.h>. */
        -: 1794:#define _GLIBCXX_USE_CHMOD 1
        -: 1795:
        -: 1796:/* Defined if clock_gettime syscall has monotonic and realtime clock support.
        -: 1797:   */
        -: 1798:/* #undef _GLIBCXX_USE_CLOCK_GETTIME_SYSCALL */
        -: 1799:
        -: 1800:/* Defined if clock_gettime has monotonic clock support. */
        -: 1801:/* #undef _GLIBCXX_USE_CLOCK_MONOTONIC */
        -: 1802:
        -: 1803:/* Defined if clock_gettime has realtime clock support. */
        -: 1804:/* #undef _GLIBCXX_USE_CLOCK_REALTIME */
        -: 1805:
        -: 1806:/* Define if ISO/IEC TR 24733 decimal floating point types are supported on
        -: 1807:   this host. */
        -: 1808:/* #undef _GLIBCXX_USE_DECIMAL_FLOAT */
        -: 1809:
        -: 1810:/* Define if /dev/random and /dev/urandom are available for
        -: 1811:   std::random_device. */
        -: 1812:#define _GLIBCXX_USE_DEV_RANDOM 1
        -: 1813:
        -: 1814:/* Define if fchmod is available in <sys/stat.h>. */
        -: 1815:#define _GLIBCXX_USE_FCHMOD 1
        -: 1816:
        -: 1817:/* Define if fchmodat is available in <sys/stat.h>. */
        -: 1818:#define _GLIBCXX_USE_FCHMODAT 1
        -: 1819:
        -: 1820:/* Define if usable getcwd is available in <unistd.h>. */
        -: 1821:#define _GLIBCXX_USE_GETCWD 1
        -: 1822:
        -: 1823:/* Defined if gettimeofday is available. */
        -: 1824:#define _GLIBCXX_USE_GETTIMEOFDAY 1
        -: 1825:
        -: 1826:/* Define if get_nprocs is available in <sys/sysinfo.h>. */
        -: 1827:/* #undef _GLIBCXX_USE_GET_NPROCS */
        -: 1828:
        -: 1829:/* Define if LFS support is available. */
        -: 1830:/* #undef _GLIBCXX_USE_LFS */
        -: 1831:
        -: 1832:/* Define if code specialized for long long should be used. */
        -: 1833:#define _GLIBCXX_USE_LONG_LONG 1
        -: 1834:
        -: 1835:/* Define if lstat is available in <sys/stat.h>. */
        -: 1836:#define _GLIBCXX_USE_LSTAT 1
        -: 1837:
        -: 1838:/* Define if usable mkdir is available in <sys/stat.h>. */
        -: 1839:#define _GLIBCXX_USE_MKDIR 1
        -: 1840:
        -: 1841:/* Defined if nanosleep is available. */
        -: 1842:#define _GLIBCXX_USE_NANOSLEEP 1
        -: 1843:
        -: 1844:/* Define if NLS translations are to be used. */
        -: 1845:/* #undef _GLIBCXX_USE_NLS */
        -: 1846:
        -: 1847:/* Define if pthreads_num_processors_np is available in <pthread.h>. */
        -: 1848:/* #undef _GLIBCXX_USE_PTHREADS_NUM_PROCESSORS_NP */
        -: 1849:
        -: 1850:/* Define if pthread_cond_clockwait is available in <pthread.h>. */
        -: 1851:/* #undef _GLIBCXX_USE_PTHREAD_COND_CLOCKWAIT */
        -: 1852:
        -: 1853:/* Define if pthread_mutex_clocklock is available in <pthread.h>. */
        -: 1854:/* #undef _GLIBCXX_USE_PTHREAD_MUTEX_CLOCKLOCK */
        -: 1855:
        -: 1856:/* Define if pthread_rwlock_clockrdlock and pthread_rwlock_clockwrlock are
        -: 1857:   available in <pthread.h>. */
        -: 1858:/* #undef _GLIBCXX_USE_PTHREAD_RWLOCK_CLOCKLOCK */
        -: 1859:
        -: 1860:/* Define if POSIX read/write locks are available in <gthr.h>. */
        -: 1861:#define _GLIBCXX_USE_PTHREAD_RWLOCK_T 1
        -: 1862:
        -: 1863:/* Define if /dev/random and /dev/urandom are available for the random_device
        -: 1864:   of TR1 (Chapter 5.1). */
        -: 1865:#define _GLIBCXX_USE_RANDOM_TR1 1
        -: 1866:
        -: 1867:/* Define if usable realpath is available in <stdlib.h>. */
        -: 1868:#define _GLIBCXX_USE_REALPATH 1
        -: 1869:
        -: 1870:/* Defined if sched_yield is available. */
        -: 1871:#define _GLIBCXX_USE_SCHED_YIELD 1
        -: 1872:
        -: 1873:/* Define if _SC_NPROCESSORS_ONLN is available in <unistd.h>. */
        -: 1874:#define _GLIBCXX_USE_SC_NPROCESSORS_ONLN 1
        -: 1875:
        -: 1876:/* Define if _SC_NPROC_ONLN is available in <unistd.h>. */
        -: 1877:/* #undef _GLIBCXX_USE_SC_NPROC_ONLN */
        -: 1878:
        -: 1879:/* Define if sendfile is available in <sys/sendfile.h>. */
        -: 1880:/* #undef _GLIBCXX_USE_SENDFILE */
        -: 1881:
        -: 1882:/* Define to restrict std::__basic_file<> to stdio APIs. */
        -: 1883:/* #undef _GLIBCXX_USE_STDIO_PURE */
        -: 1884:
        -: 1885:/* Define if struct stat has timespec members. */
        -: 1886:/* #undef _GLIBCXX_USE_ST_MTIM */
        -: 1887:
        -: 1888:/* Define if sysctl(), CTL_HW and HW_NCPU are available in <sys/sysctl.h>. */
        -: 1889:#define _GLIBCXX_USE_SYSCTL_HW_NCPU 1
        -: 1890:
        -: 1891:/* Define if obsolescent tmpnam is available in <stdio.h>. */
        -: 1892:#define _GLIBCXX_USE_TMPNAM 1
        -: 1893:
        -: 1894:/* Define if c8rtomb and mbrtoc8 functions in <uchar.h> should be imported
        -: 1895:   into namespace std in <cuchar> for C++20. */
        -: 1896:/* #undef _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_CXX20 */
        -: 1897:
        -: 1898:/* Define if c8rtomb and mbrtoc8 functions in <uchar.h> should be imported
        -: 1899:   into namespace std in <cuchar> for -fchar8_t. */
        -: 1900:/* #undef _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_FCHAR8_T */
        -: 1901:
        -: 1902:/* Define if utime is available in <utime.h>. */
        -: 1903:#define _GLIBCXX_USE_UTIME 1
        -: 1904:
        -: 1905:/* Define if utimensat and UTIME_OMIT are available in <sys/stat.h> and
        -: 1906:   AT_FDCWD in <fcntl.h>. */
        -: 1907:#define _GLIBCXX_USE_UTIMENSAT 1
        -: 1908:
        -: 1909:/* Define if code specialized for wchar_t should be used. */
        -: 1910:#define _GLIBCXX_USE_WCHAR_T 1
        -: 1911:
        -: 1912:/* Define to 1 if a verbose library is built, or 0 otherwise. */
        -: 1913:#define _GLIBCXX_VERBOSE 1
        -: 1914:
        -: 1915:/* Defined if as can handle rdrand. */
        -: 1916:/* #undef _GLIBCXX_X86_RDRAND */
        -: 1917:
        -: 1918:/* Defined if as can handle rdseed. */
        -: 1919:/* #undef _GLIBCXX_X86_RDSEED */
        -: 1920:
        -: 1921:/* Define to 1 if mutex_timedlock is available. */
        -: 1922:#define _GTHREAD_USE_MUTEX_TIMEDLOCK 0
        -: 1923:
        -: 1924:/* Define for large files, on AIX-style hosts. */
        -: 1925:/* #undef _GLIBCXX_LARGE_FILES */
        -: 1926:
        -: 1927:/* Define if all C++11 floating point overloads are available in <math.h>.  */
        -: 1928:#if __cplusplus >= 201103L
        -: 1929:/* #undef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP */
        -: 1930:#endif
        -: 1931:
        -: 1932:/* Define if all C++11 integral type overloads are available in <math.h>.  */
        -: 1933:#if __cplusplus >= 201103L
        -: 1934:/* #undef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT */
        -: 1935:#endif
        -: 1936:
        -: 1937:#if defined (_GLIBCXX_HAVE__ACOSF) && ! defined (_GLIBCXX_HAVE_ACOSF)
        -: 1938:# define _GLIBCXX_HAVE_ACOSF 1
        -: 1939:# define acosf _acosf
        -: 1940:#endif
        -: 1941:
        -: 1942:#if defined (_GLIBCXX_HAVE__ACOSL) && ! defined (_GLIBCXX_HAVE_ACOSL)
        -: 1943:# define _GLIBCXX_HAVE_ACOSL 1
        -: 1944:# define acosl _acosl
        -: 1945:#endif
        -: 1946:
        -: 1947:#if defined (_GLIBCXX_HAVE__ASINF) && ! defined (_GLIBCXX_HAVE_ASINF)
        -: 1948:# define _GLIBCXX_HAVE_ASINF 1
        -: 1949:# define asinf _asinf
        -: 1950:#endif
        -: 1951:
        -: 1952:#if defined (_GLIBCXX_HAVE__ASINL) && ! defined (_GLIBCXX_HAVE_ASINL)
        -: 1953:# define _GLIBCXX_HAVE_ASINL 1
        -: 1954:# define asinl _asinl
        -: 1955:#endif
        -: 1956:
        -: 1957:#if defined (_GLIBCXX_HAVE__ATAN2F) && ! defined (_GLIBCXX_HAVE_ATAN2F)
        -: 1958:# define _GLIBCXX_HAVE_ATAN2F 1
        -: 1959:# define atan2f _atan2f
        -: 1960:#endif
        -: 1961:
        -: 1962:#if defined (_GLIBCXX_HAVE__ATAN2L) && ! defined (_GLIBCXX_HAVE_ATAN2L)
        -: 1963:# define _GLIBCXX_HAVE_ATAN2L 1
        -: 1964:# define atan2l _atan2l
        -: 1965:#endif
        -: 1966:
        -: 1967:#if defined (_GLIBCXX_HAVE__ATANF) && ! defined (_GLIBCXX_HAVE_ATANF)
        -: 1968:# define _GLIBCXX_HAVE_ATANF 1
        -: 1969:# define atanf _atanf
        -: 1970:#endif
        -: 1971:
        -: 1972:#if defined (_GLIBCXX_HAVE__ATANL) && ! defined (_GLIBCXX_HAVE_ATANL)
        -: 1973:# define _GLIBCXX_HAVE_ATANL 1
        -: 1974:# define atanl _atanl
        -: 1975:#endif
        -: 1976:
        -: 1977:#if defined (_GLIBCXX_HAVE__CEILF) && ! defined (_GLIBCXX_HAVE_CEILF)
        -: 1978:# define _GLIBCXX_HAVE_CEILF 1
        -: 1979:# define ceilf _ceilf
        -: 1980:#endif
        -: 1981:
        -: 1982:#if defined (_GLIBCXX_HAVE__CEILL) && ! defined (_GLIBCXX_HAVE_CEILL)
        -: 1983:# define _GLIBCXX_HAVE_CEILL 1
        -: 1984:# define ceill _ceill
        -: 1985:#endif
        -: 1986:
        -: 1987:#if defined (_GLIBCXX_HAVE__COSF) && ! defined (_GLIBCXX_HAVE_COSF)
        -: 1988:# define _GLIBCXX_HAVE_COSF 1
        -: 1989:# define cosf _cosf
        -: 1990:#endif
        -: 1991:
        -: 1992:#if defined (_GLIBCXX_HAVE__COSHF) && ! defined (_GLIBCXX_HAVE_COSHF)
        -: 1993:# define _GLIBCXX_HAVE_COSHF 1
        -: 1994:# define coshf _coshf
        -: 1995:#endif
        -: 1996:
        -: 1997:#if defined (_GLIBCXX_HAVE__COSHL) && ! defined (_GLIBCXX_HAVE_COSHL)
        -: 1998:# define _GLIBCXX_HAVE_COSHL 1
        -: 1999:# define coshl _coshl
        -: 2000:#endif
        -: 2001:
        -: 2002:#if defined (_GLIBCXX_HAVE__COSL) && ! defined (_GLIBCXX_HAVE_COSL)
        -: 2003:# define _GLIBCXX_HAVE_COSL 1
        -: 2004:# define cosl _cosl
        -: 2005:#endif
        -: 2006:
        -: 2007:#if defined (_GLIBCXX_HAVE__EXPF) && ! defined (_GLIBCXX_HAVE_EXPF)
        -: 2008:# define _GLIBCXX_HAVE_EXPF 1
        -: 2009:# define expf _expf
        -: 2010:#endif
        -: 2011:
        -: 2012:#if defined (_GLIBCXX_HAVE__EXPL) && ! defined (_GLIBCXX_HAVE_EXPL)
        -: 2013:# define _GLIBCXX_HAVE_EXPL 1
        -: 2014:# define expl _expl
        -: 2015:#endif
        -: 2016:
        -: 2017:#if defined (_GLIBCXX_HAVE__FABSF) && ! defined (_GLIBCXX_HAVE_FABSF)
        -: 2018:# define _GLIBCXX_HAVE_FABSF 1
        -: 2019:# define fabsf _fabsf
        -: 2020:#endif
        -: 2021:
        -: 2022:#if defined (_GLIBCXX_HAVE__FABSL) && ! defined (_GLIBCXX_HAVE_FABSL)
        -: 2023:# define _GLIBCXX_HAVE_FABSL 1
        -: 2024:# define fabsl _fabsl
        -: 2025:#endif
        -: 2026:
        -: 2027:#if defined (_GLIBCXX_HAVE__FINITE) && ! defined (_GLIBCXX_HAVE_FINITE)
        -: 2028:# define _GLIBCXX_HAVE_FINITE 1
        -: 2029:# define finite _finite
        -: 2030:#endif
        -: 2031:
        -: 2032:#if defined (_GLIBCXX_HAVE__FINITEF) && ! defined (_GLIBCXX_HAVE_FINITEF)
        -: 2033:# define _GLIBCXX_HAVE_FINITEF 1
        -: 2034:# define finitef _finitef
        -: 2035:#endif
        -: 2036:
        -: 2037:#if defined (_GLIBCXX_HAVE__FINITEL) && ! defined (_GLIBCXX_HAVE_FINITEL)
        -: 2038:# define _GLIBCXX_HAVE_FINITEL 1
        -: 2039:# define finitel _finitel
        -: 2040:#endif
        -: 2041:
        -: 2042:#if defined (_GLIBCXX_HAVE__FLOORF) && ! defined (_GLIBCXX_HAVE_FLOORF)
        -: 2043:# define _GLIBCXX_HAVE_FLOORF 1
        -: 2044:# define floorf _floorf
        -: 2045:#endif
        -: 2046:
        -: 2047:#if defined (_GLIBCXX_HAVE__FLOORL) && ! defined (_GLIBCXX_HAVE_FLOORL)
        -: 2048:# define _GLIBCXX_HAVE_FLOORL 1
        -: 2049:# define floorl _floorl
        -: 2050:#endif
        -: 2051:
        -: 2052:#if defined (_GLIBCXX_HAVE__FMODF) && ! defined (_GLIBCXX_HAVE_FMODF)
        -: 2053:# define _GLIBCXX_HAVE_FMODF 1
        -: 2054:# define fmodf _fmodf
        -: 2055:#endif
        -: 2056:
        -: 2057:#if defined (_GLIBCXX_HAVE__FMODL) && ! defined (_GLIBCXX_HAVE_FMODL)
        -: 2058:# define _GLIBCXX_HAVE_FMODL 1
        -: 2059:# define fmodl _fmodl
        -: 2060:#endif
        -: 2061:
        -: 2062:#if defined (_GLIBCXX_HAVE__FPCLASS) && ! defined (_GLIBCXX_HAVE_FPCLASS)
        -: 2063:# define _GLIBCXX_HAVE_FPCLASS 1
        -: 2064:# define fpclass _fpclass
        -: 2065:#endif
        -: 2066:
        -: 2067:#if defined (_GLIBCXX_HAVE__FREXPF) && ! defined (_GLIBCXX_HAVE_FREXPF)
        -: 2068:# define _GLIBCXX_HAVE_FREXPF 1
        -: 2069:# define frexpf _frexpf
        -: 2070:#endif
        -: 2071:
        -: 2072:#if defined (_GLIBCXX_HAVE__FREXPL) && ! defined (_GLIBCXX_HAVE_FREXPL)
        -: 2073:# define _GLIBCXX_HAVE_FREXPL 1
        -: 2074:# define frexpl _frexpl
        -: 2075:#endif
        -: 2076:
        -: 2077:#if defined (_GLIBCXX_HAVE__HYPOT) && ! defined (_GLIBCXX_HAVE_HYPOT)
        -: 2078:# define _GLIBCXX_HAVE_HYPOT 1
        -: 2079:# define hypot _hypot
        -: 2080:#endif
        -: 2081:
        -: 2082:#if defined (_GLIBCXX_HAVE__HYPOTF) && ! defined (_GLIBCXX_HAVE_HYPOTF)
        -: 2083:# define _GLIBCXX_HAVE_HYPOTF 1
        -: 2084:# define hypotf _hypotf
        -: 2085:#endif
        -: 2086:
        -: 2087:#if defined (_GLIBCXX_HAVE__HYPOTL) && ! defined (_GLIBCXX_HAVE_HYPOTL)
        -: 2088:# define _GLIBCXX_HAVE_HYPOTL 1
        -: 2089:# define hypotl _hypotl
        -: 2090:#endif
        -: 2091:
        -: 2092:#if defined (_GLIBCXX_HAVE__ISINF) && ! defined (_GLIBCXX_HAVE_ISINF)
        -: 2093:# define _GLIBCXX_HAVE_ISINF 1
        -: 2094:# define isinf _isinf
        -: 2095:#endif
        -: 2096:
        -: 2097:#if defined (_GLIBCXX_HAVE__ISINFF) && ! defined (_GLIBCXX_HAVE_ISINFF)
        -: 2098:# define _GLIBCXX_HAVE_ISINFF 1
        -: 2099:# define isinff _isinff
        -: 2100:#endif
        -: 2101:
        -: 2102:#if defined (_GLIBCXX_HAVE__ISINFL) && ! defined (_GLIBCXX_HAVE_ISINFL)
        -: 2103:# define _GLIBCXX_HAVE_ISINFL 1
        -: 2104:# define isinfl _isinfl
        -: 2105:#endif
        -: 2106:
        -: 2107:#if defined (_GLIBCXX_HAVE__ISNAN) && ! defined (_GLIBCXX_HAVE_ISNAN)
        -: 2108:# define _GLIBCXX_HAVE_ISNAN 1
        -: 2109:# define isnan _isnan
        -: 2110:#endif
        -: 2111:
        -: 2112:#if defined (_GLIBCXX_HAVE__ISNANF) && ! defined (_GLIBCXX_HAVE_ISNANF)
        -: 2113:# define _GLIBCXX_HAVE_ISNANF 1
        -: 2114:# define isnanf _isnanf
        -: 2115:#endif
        -: 2116:
        -: 2117:#if defined (_GLIBCXX_HAVE__ISNANL) && ! defined (_GLIBCXX_HAVE_ISNANL)
        -: 2118:# define _GLIBCXX_HAVE_ISNANL 1
        -: 2119:# define isnanl _isnanl
        -: 2120:#endif
        -: 2121:
        -: 2122:#if defined (_GLIBCXX_HAVE__LDEXPF) && ! defined (_GLIBCXX_HAVE_LDEXPF)
        -: 2123:# define _GLIBCXX_HAVE_LDEXPF 1
        -: 2124:# define ldexpf _ldexpf
        -: 2125:#endif
        -: 2126:
        -: 2127:#if defined (_GLIBCXX_HAVE__LDEXPL) && ! defined (_GLIBCXX_HAVE_LDEXPL)
        -: 2128:# define _GLIBCXX_HAVE_LDEXPL 1
        -: 2129:# define ldexpl _ldexpl
        -: 2130:#endif
        -: 2131:
        -: 2132:#if defined (_GLIBCXX_HAVE__LOG10F) && ! defined (_GLIBCXX_HAVE_LOG10F)
        -: 2133:# define _GLIBCXX_HAVE_LOG10F 1
        -: 2134:# define log10f _log10f
        -: 2135:#endif
        -: 2136:
        -: 2137:#if defined (_GLIBCXX_HAVE__LOG10L) && ! defined (_GLIBCXX_HAVE_LOG10L)
        -: 2138:# define _GLIBCXX_HAVE_LOG10L 1
        -: 2139:# define log10l _log10l
        -: 2140:#endif
        -: 2141:
        -: 2142:#if defined (_GLIBCXX_HAVE__LOGF) && ! defined (_GLIBCXX_HAVE_LOGF)
        -: 2143:# define _GLIBCXX_HAVE_LOGF 1
        -: 2144:# define logf _logf
        -: 2145:#endif
        -: 2146:
        -: 2147:#if defined (_GLIBCXX_HAVE__LOGL) && ! defined (_GLIBCXX_HAVE_LOGL)
        -: 2148:# define _GLIBCXX_HAVE_LOGL 1
        -: 2149:# define logl _logl
        -: 2150:#endif
        -: 2151:
        -: 2152:#if defined (_GLIBCXX_HAVE__MODF) && ! defined (_GLIBCXX_HAVE_MODF)
        -: 2153:# define _GLIBCXX_HAVE_MODF 1
        -: 2154:# define modf _modf
        -: 2155:#endif
        -: 2156:
        -: 2157:#if defined (_GLIBCXX_HAVE__MODFF) && ! defined (_GLIBCXX_HAVE_MODFF)
        -: 2158:# define _GLIBCXX_HAVE_MODFF 1
        -: 2159:# define modff _modff
        -: 2160:#endif
        -: 2161:
        -: 2162:#if defined (_GLIBCXX_HAVE__MODFL) && ! defined (_GLIBCXX_HAVE_MODFL)
        -: 2163:# define _GLIBCXX_HAVE_MODFL 1
        -: 2164:# define modfl _modfl
        -: 2165:#endif
        -: 2166:
        -: 2167:#if defined (_GLIBCXX_HAVE__POWF) && ! defined (_GLIBCXX_HAVE_POWF)
        -: 2168:# define _GLIBCXX_HAVE_POWF 1
        -: 2169:# define powf _powf
        -: 2170:#endif
        -: 2171:
        -: 2172:#if defined (_GLIBCXX_HAVE__POWL) && ! defined (_GLIBCXX_HAVE_POWL)
        -: 2173:# define _GLIBCXX_HAVE_POWL 1
        -: 2174:# define powl _powl
        -: 2175:#endif
        -: 2176:
        -: 2177:#if defined (_GLIBCXX_HAVE__QFPCLASS) && ! defined (_GLIBCXX_HAVE_QFPCLASS)
        -: 2178:# define _GLIBCXX_HAVE_QFPCLASS 1
        -: 2179:# define qfpclass _qfpclass
        -: 2180:#endif
        -: 2181:
        -: 2182:#if defined (_GLIBCXX_HAVE__SINCOS) && ! defined (_GLIBCXX_HAVE_SINCOS)
        -: 2183:# define _GLIBCXX_HAVE_SINCOS 1
        -: 2184:# define sincos _sincos
        -: 2185:#endif
        -: 2186:
        -: 2187:#if defined (_GLIBCXX_HAVE__SINCOSF) && ! defined (_GLIBCXX_HAVE_SINCOSF)
        -: 2188:# define _GLIBCXX_HAVE_SINCOSF 1
        -: 2189:# define sincosf _sincosf
        -: 2190:#endif
        -: 2191:
        -: 2192:#if defined (_GLIBCXX_HAVE__SINCOSL) && ! defined (_GLIBCXX_HAVE_SINCOSL)
        -: 2193:# define _GLIBCXX_HAVE_SINCOSL 1
        -: 2194:# define sincosl _sincosl
        -: 2195:#endif
        -: 2196:
        -: 2197:#if defined (_GLIBCXX_HAVE__SINF) && ! defined (_GLIBCXX_HAVE_SINF)
        -: 2198:# define _GLIBCXX_HAVE_SINF 1
        -: 2199:# define sinf _sinf
        -: 2200:#endif
        -: 2201:
        -: 2202:#if defined (_GLIBCXX_HAVE__SINHF) && ! defined (_GLIBCXX_HAVE_SINHF)
        -: 2203:# define _GLIBCXX_HAVE_SINHF 1
        -: 2204:# define sinhf _sinhf
        -: 2205:#endif
        -: 2206:
        -: 2207:#if defined (_GLIBCXX_HAVE__SINHL) && ! defined (_GLIBCXX_HAVE_SINHL)
        -: 2208:# define _GLIBCXX_HAVE_SINHL 1
        -: 2209:# define sinhl _sinhl
        -: 2210:#endif
        -: 2211:
        -: 2212:#if defined (_GLIBCXX_HAVE__SINL) && ! defined (_GLIBCXX_HAVE_SINL)
        -: 2213:# define _GLIBCXX_HAVE_SINL 1
        -: 2214:# define sinl _sinl
        -: 2215:#endif
        -: 2216:
        -: 2217:#if defined (_GLIBCXX_HAVE__SQRTF) && ! defined (_GLIBCXX_HAVE_SQRTF)
        -: 2218:# define _GLIBCXX_HAVE_SQRTF 1
        -: 2219:# define sqrtf _sqrtf
        -: 2220:#endif
        -: 2221:
        -: 2222:#if defined (_GLIBCXX_HAVE__SQRTL) && ! defined (_GLIBCXX_HAVE_SQRTL)
        -: 2223:# define _GLIBCXX_HAVE_SQRTL 1
        -: 2224:# define sqrtl _sqrtl
        -: 2225:#endif
        -: 2226:
        -: 2227:#if defined (_GLIBCXX_HAVE__STRTOF) && ! defined (_GLIBCXX_HAVE_STRTOF)
        -: 2228:# define _GLIBCXX_HAVE_STRTOF 1
        -: 2229:# define strtof _strtof
        -: 2230:#endif
        -: 2231:
        -: 2232:#if defined (_GLIBCXX_HAVE__STRTOLD) && ! defined (_GLIBCXX_HAVE_STRTOLD)
        -: 2233:# define _GLIBCXX_HAVE_STRTOLD 1
        -: 2234:# define strtold _strtold
        -: 2235:#endif
        -: 2236:
        -: 2237:#if defined (_GLIBCXX_HAVE__TANF) && ! defined (_GLIBCXX_HAVE_TANF)
        -: 2238:# define _GLIBCXX_HAVE_TANF 1
        -: 2239:# define tanf _tanf
        -: 2240:#endif
        -: 2241:
        -: 2242:#if defined (_GLIBCXX_HAVE__TANHF) && ! defined (_GLIBCXX_HAVE_TANHF)
        -: 2243:# define _GLIBCXX_HAVE_TANHF 1
        -: 2244:# define tanhf _tanhf
        -: 2245:#endif
        -: 2246:
        -: 2247:#if defined (_GLIBCXX_HAVE__TANHL) && ! defined (_GLIBCXX_HAVE_TANHL)
        -: 2248:# define _GLIBCXX_HAVE_TANHL 1
        -: 2249:# define tanhl _tanhl
        -: 2250:#endif
        -: 2251:
        -: 2252:#if defined (_GLIBCXX_HAVE__TANL) && ! defined (_GLIBCXX_HAVE_TANL)
        -: 2253:# define _GLIBCXX_HAVE_TANL 1
        -: 2254:# define tanl _tanl
        -: 2255:#endif
        -: 2256:
        -: 2257:#endif // _GLIBCXX_CXX_CONFIG_H
